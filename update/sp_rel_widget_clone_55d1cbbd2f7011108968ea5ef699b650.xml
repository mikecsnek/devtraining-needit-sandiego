<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="INSERT_OR_UPDATE">
        <child display_value="test">c9d1473d2f7011108968ea5ef699b6f3</child>
        <cloned>2022-07-20 23:17:32</cloned>
        <last_validated>2022-07-20 23:17:32</last_validated>
        <parent display_value="SC Order Guide">480ca054db03320064301150f0b8f545</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, $http, nowServer, $timeout, spUtil, spScUtil, spModal, spAttachmentUpload, i18n, $window, $location, spAriaUtil, nowAttachmentHandler, $log, $sce, $q, spAtf, spSCNavStateManager, cabrillo) {
	var c = this;
	$scope.guide_step = 0;
	$scope.m = $scope.data.msgs;
	$scope.evaluatingIncludes = false;
	$scope.data.isMEE = cabrillo.isNative() &amp;&amp; $scope.options.native_mobile == 'true';
	$scope.isItemOpened = false;
    $scope.setDefaultValue = true;
	includedGformInstances = {};
	var webAnalyticsMsgSuffix =  $scope.data.isMEE ? " -NOW Mobile" : "";
	$rootScope.$on('spModel.gForm.rendered', function() {
		if ($scope.guide_step === 0) {
			addCabrilloBottomButtons({
				title: [$scope.data.msgs.nextMsg],
				fn: [$scope.goNext]
			});
		}
		$timeout(function() {
			spAtf.init().then(function(atf) {
				$scope._atf = atf;
				atf.expose('catalog_util', catalogUtil);
			});
		}, 10);
	});
	if ($scope.options.isServiceWorkspace &amp;&amp; $window.frameElement) {
		var workspaceParams = {};
		workspaceParams.sysparm_parent_table = $window.frameElement.getAttribute('parent-table') || $window.frameElement.dataParentTable;
		workspaceParams.sysparm_parent_sys_id = $window.frameElement.getAttribute('parent-sys-id') || $window.frameElement.dataParentSysId;
		$scope.data.workspaceParams = workspaceParams;
	}
	if ($scope.data.sc_cat_item) {
		$scope.data.sc_cat_item.trusted_description = $sce.trustAsHtml($scope.data.sc_cat_item.description);
		if ($scope.data.sc_cat_item.request_method == "request")
			$scope.submitButtonMsg = $scope.m.requestMsg;
		else if ($scope.data.sc_cat_item.request_method == "submit")
			$scope.submitButtonMsg = $scope.m.submitMsg;
		else
			$scope.submitButtonMsg = $scope.m.orderNowMsg;
		// Breadcrumbs
		if (!$scope.data.categories)
			$scope.data.categories = [];
		$scope.data.categories.forEach(function(category, index, categories){
			categories[index].url = category.url + '&amp;catalog_id=' + $scope.data.catalog_id;
		});
		if ($scope.data.categories.length &gt; 0) {
            $scope.data.categories.unshift({
                label: $scope.data.sc_catalog || $scope.page.title,
                url: '?id=' + $scope.data.sc_category_page + '&amp;catalog_id=' + $scope.data.catalog_id
            });
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
			if ($scope.data.all_catalog_msg) {
                $scope.data.categories.unshift({
                    label: $scope.data.all_catalog_msg,
                    url: '?id=' + $scope.data.sc_category_page + "&amp;catalog_id=-1"
                });
		}
        } else {
            $scope.data.categories.push({
                label: $scope.data.sc_cat_item.name,
                url: '#'
            });
		}
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', $scope.data.categories);
		});
		spUtil.setSearchPage('sc');
	} else {
        var notFoundBC = [{
            label: $scope.page.title,
            url: '?id=' + $scope.data.sc_catalog_page
        }];
		$timeout(function() {
			$scope.$emit('sp.update.breadcrumbs', notFoundBC);
		});
		spUtil.setSearchPage('sc');
	}

	function isValidItemGform(g_form) {
		if (g_form.getSysId() === $scope.data.sc_cat_item.sys_id)
			return true;
		if ($scope.includedItems)
			for (var i in $scope.includedItems)
				if ($scope.includedItems[i].sys_id === g_form.getSysId())
					return true;
		return false;
	}

    function setValueInNextDigestCycle(g_form, value, displayValue) {
        $timeout(function() {
		    g_form.setValue($scope.data.sc_cat_item.requested_for_variable_name, value, displayValue);
        });
	}

	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		if (!isValidItemGform(gFormInstance))
			return;
		if ($scope.guide_step == 1)
			removeTabList();

		includedGformInstances[gFormInstance.getSysId()] = gFormInstance;
		spSCNavStateManager.register(gFormInstance);
		spSCNavStateManager.isNative($scope.data.isMEE);
        var g_form = includedGformInstances[$scope.data.sc_cat_item.sys_id];
        if ($scope.setDefaultValue &amp;&amp; g_form &amp;&amp; c.options.requested_for_id &amp;&amp; c.options.requested_for_display) {
            $scope.data.requested_for = {
                id: c.options.requested_for_id,
                display_value: c.options.requested_for_display
            };
            if ($scope.data.sc_cat_item.requested_for_variable_name) {
                $scope.setDefaultValue = false;
                setValueInNextDigestCycle(g_form, c.options.requested_for_id, c.options.requested_for_display);
            }
        } else if ($scope.setDefaultValue &amp;&amp; $scope.data.workspaceParams &amp;&amp; $scope.data.workspaceParams.sysparm_parent_table &amp;&amp; $scope.data.workspaceParams.sysparm_parent_sys_id) {
			$scope.server.get({
				action: 'get_requested_for',
				parentParams : $scope.data.workspaceParams
			}).then(function(response) {
					if (response.data.requested_for &amp;&amp; g_form) {
                    $scope.setDefaultValue = false;
						$scope.data.requested_for = response.data.requested_for;
                    setValueInNextDigestCycle(g_form, response.data.requested_for.id, response.data.requested_for.displayValue);
					}
			});
		}
		gFormInstance.$private.events.on('submitted', function(event) {
			gFormInstance.$private.processed = true;
			if (gFormInstance.getSysId() == $scope.data.sc_cat_item.sys_id) {
                $scope.$broadcast('$sp.service_catalog.form_submitted', {
                    action_name: 'submit'
                });
				$scope.guide_step = 1;
				evalIncludes();
				spSCNavStateManager.unregisterForms(Object.keys(includedGformInstances));
				$scope.itemShown = 0;
            } else
				processChooseOptions();
		});
		if ($scope.data.isMEE) {
			cabrillo.viewLayout.showSpinner();
			cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
			$rootScope.$on('spModel.gForm.showNativeMobileButtons', function() {
				cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
				showCabrilloBottomButtons();
			});
		}
		// Set Title in Workspace
		else if ($scope.options.isServiceWorkspace)
			$window.postMessage({
				msg:'CATALOG_ITEM_SET_TITLE',
				title: $scope.data.sc_cat_item.name
			}, $location.origin);

		$timeout(function() {
			$rootScope.$emit('spModel.gForm.rendered');
			hideSpinner();
		}, 175);
	});
    $rootScope.$on('spModel.gForm.rendered', function() {
        if ($scope.guide_step == 0)
            spAriaUtil.sendLiveMessage($scope.m.openedOrderGuideMsg);	
        else if ($scope.guide_step == 1)
            sendMessageAfterAllItemsAreLoaded();
    });
	$scope.$on('spModel.gForm.destroyed', function(e, sys_id){
		delete includedGformInstances[sys_id];
	});
    var validationComplete = $rootScope.$on('$sp.service_catalog.form_validation_complete', function() {
        $scope.validating = false;
    });
	/*************************************************************************************************/
	/********************************       Guide Navigation Start     *******************************/
	/*****#####################################################################################********/
	$scope.goPrev = function() {
		if ($scope.submitted)
			return;
		clearCabrilloBottomButtons();
		$scope.includedItems.forEach(function (item) {
			item.isOpen = false;
		})
		$scope.guide_step--;
		if($scope.guide_step==0)
			spSCNavStateManager.unregisterForms(Object.keys(includedGformInstances));
		if ($scope.guide_step === 1) {
			addCabrilloBottomButtons({
				title: [$scope.data.msgs.prevMsg, $scope.data.msgs.nextMsg],
				fn: [$scope.goPrev, $scope.goNext]
			});
		}
	}
	$scope.goNext = function(timeout) {
		var gForm;
		if($scope.guide_step == 0) {
			$scope.$evalAsync(function () {
				gForm = includedGformInstances[$scope.data.sys_id];
				if (!spScUtil.isServerValidationDone($scope.data.sc_cat_item._fields))
					$scope.validating = true;
				else if (gForm &amp;&amp; !gForm.submit()) {
					timeout = timeout || 2000;
					if ($scope.data.isMEE)
						openItemWithInvalidFields();
					$timeout(function () {
                        $scope.$broadcast('$sp.service_catalog.form_submit_failed', {
                            action_name: 'submit'
                        });
					}, timeout);
				}
			});
        } else if ($scope.guide_step == 1) {
					if($scope.totalIncluded &lt; 1) {
						spUtil.addErrorMessage($scope.m.alteastOneItemMsg);
						return;
					}
			$scope.itemsIncluded = $scope.includedItems.length;
			$scope.includedItemsCounter = 0;
			$scope.includedItems.forEach(function(item) {includedGformInstances[item.sys_id].$private.processed = false;});
			$scope.$evalAsync(function () {
				for (var i = 0; i &lt; $scope.includedItems.length; i++) {
					if ($scope.includedItems[i].included) {
						$scope.includedItemsCounter++;
						var g_form = includedGformInstances[$scope.includedItems[i].sys_id];
						g_form.$private.processed = false;
						if (!spScUtil.isServerValidationDone($scope.includedItems[i]._fields))
							$scope.validating = true;
						else if (g_form &amp;&amp; !g_form.submit()) {
							timeout = timeout || 1000;
							$timeout(function (itemCounter) {
								$scope.$broadcast('$sp.service_catalog.form_submit_failed', {
                                    action_name: 'submit'
                                });
								openItemWithInvalidFields(itemCounter);
							}.bind(null, $scope.includedItemsCounter), timeout); 
						}
          } else
							$scope.itemsIncluded--;
				}
			});
		}
	}
	$scope.toggleItemState = function(item) {
		if (item.included) {
			angular.element('#item_details_' + item.sys_id).find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').attr('tabindex', -1);
        } else {
			angular.element('#item_details_' + item.sys_id).find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').removeAttr('tabindex');
		}
		$scope.totalIncluded = ($scope.includedItems || []).filter(function(item) {
			return item.included;
		}).length;
		$scope.requested_for_variable_count += getRequestedForVariableCountDiff(item);
	}

	function getRequestedForVariableCountDiff(item) {
		if (!item.has_requested_for_variable)
			return 0;
		return item.included ? -1 : 1;
	}

	function processChooseOptions() {
		var canSubmit = true;
		for (var i = 0; i &lt; $scope.includedItems.length; i++) {
			if ($scope.includedItems[i].included) {
				var gForm = includedGformInstances[$scope.includedItems[i].sys_id];
				if (gForm &amp;&amp; !gForm.$private.processed) {
					canSubmit = false;
					break;
				}
			}
		}
		if(canSubmit) {
			evalGuidePrice();
			spSCNavStateManager.unregisterForms(Object.keys(includedGformInstances));
            $scope.$broadcast('$sp.service_catalog.form_submitted', {
                action_name: 'submit'
            });
			$scope.guide_step = 2;
			spAriaUtil.sendLiveMessage($scope.m.orderSummaryOpenedMsg);
			$scope.showAddToCart = $scope.options.show_add_cart_button == 'true' &amp;&amp; !$scope.data.sc_cat_item.no_cart &amp;&amp; !$scope.isSequencedGuide;
			addCabrilloBottomButtons({
				title: [i18n.getMessage('Add to Cart'), $scope.submitButtonMsg],
				fn: [$scope.triggerAddToCart, $scope.triggerSubmit]
			});
		}
	}

    var sendMessageAfterAllItemsAreLoaded = (function() {
        var formsIncluded = 0;
        return function() {
            formsIncluded++;
            if (formsIncluded == $scope.includedItems.length) {
               spAriaUtil.sendLiveMessage($scope.m.chooseOptionsOpenedMsg);
               formsIncluded = 0;
           }
        }
    })();
	
	var openItemWithInvalidFields = function(itemCounter) {
			if (itemCounter == $scope.itemsIncluded) {			
				var someFormIsInvalid = false;
				for (var i=0; i &lt; $scope.includedItems.length; i++) {
					if ($scope.includedItems[i].included) {
						var gForm = includedGformInstances[$scope.includedItems[i].sys_id];
						if (!gForm)
							return;
						var fields = gForm.getFieldNames();
						for (var j=0; j&lt;fields.length; j++) {
							var field = gForm.getField(fields[j]);
							if (field.isInvalid) {
								if ($scope.data.isMEE) {
									$rootScope.$broadcast('spModel.view.render', $scope.includedItems[i].sys_id, function(){$timeout(function(){gForm.submit()})});
									$scope.includedItems[i].isOpen = true;
									$scope.showCancel($scope.includedItems[i].sys_id);
                                } else
									$scope.includedItems[i].isOpen = true;
								someFormIsInvalid = true;
								break;
							}					
						}
						if ($scope.data.isMEE &amp;&amp; someFormIsInvalid)
							break;
					}
				}
				if (!$scope.data.isMEE)
					focusInvalidField();	
			}
		}
	
	function focusInvalidField(){     
		$timeout(function() {
			for (var i = 0; i &lt; $scope.includedItems.length; i++) {
				if ($scope.includedItems[i].included) {
					var mandatory = $scope.includedItems[i]._mandatory;
					if (mandatory &amp;&amp; mandatory.length &gt; 0) {
						var elems = angular.element("[name*='" + mandatory[0].name + "']");
						if (elems &amp;&amp; elems.length &gt; 0) //set focus the first element
							elems[0].focus();
						break;
					} else {
						var gForm = includedGformInstances[$scope.includedItems[i].sys_id];
						getInvalidFields(gForm);
						var invalidFields = gForm._invalidFields;
						if (invalidFields &amp;&amp; invalidFields.length &gt; 0) {
							var invalid = angular.element("[name*='" + invalidFields[0].name + "']");
							if (invalid &amp;&amp; invalid.length &gt; 0) //set focus the first element
								invalid[0].focus();
							break;
						}
					}
				}
			}
		}, 500);
	}
	$scope.closeItemAccordion = function (itemOpened, id) {
		itemOpened.isOpen = false;
		cabrillo.viewLayout.setNavigationBarButtons();
		cabrillo.viewLayout.setTitle($scope.data.sc_cat_item.name);
		addCabrilloBottomButtons({
			title: [$scope.data.msgs.prevMsg, $scope.data.msgs.nextMsg],
			fn: [$scope.goPrev, $scope.goNext]
		});
		if (id)
			angular.element('#accordion-header-' + id).focus();
		$scope.isItemOpened = false;
	}
	$scope.showItem = function(index) {
		if($scope.itemShown == index)
			$scope.itemShown = -1;
		else
			$scope.itemShown = index;
	}
	
	$scope.updateQuantity = function(item) {
		spAriaUtil.sendLiveMessage(i18n.format("Updated {i1} quantity to {i2}", {i1: item.name, i2: item.quantity}));
	}
	
	$scope.showCancel = function(id) {
		var itemOpened, buttons;
		var restElementsSelectors = ".accordion-header-heading, .og-timeline, .timeline-container, #included-items-title, .accordion-toggle";
		if ($scope.data.isMEE) {
			itemOpened = $scope.includedItems.find(function (item) {
				return item.sys_id === id;
			});
			if (!itemOpened.included) {
				//to handle a corner case on iOS where a disabled item is clickable via VO
				return;
			}
			clearCabrilloBottomButtons();
			cabrillo.viewLayout.setNavigationBarButtons();
			cabrillo.viewLayout.hideBackButton();
			cabrillo.viewLayout.setTitle(itemOpened.name);
            buttons = [{
					title: i18n.getMessage('Done'),
					enabled: true
            }];
			cabrillo.viewLayout.setNavigationBarButtons(buttons, function(index) {
				angular.element(restElementsSelectors).removeAttr('aria-hidden');
				$scope.closeItemAccordion(itemOpened, id);
			});
			angular.element(restElementsSelectors).attr('aria-hidden', 'true');
			document.activeElement &amp;&amp; document.activeElement.blur();
			$scope.$$postDigest(function () {
					angular.element('#item_details_' + id + '_wrapper').focus();
			});
		}
		$scope.isItemOpened = true;
	}
	$scope.$watch(function(scope) { 
		return !!angular.element("#submit").attr('disabled'); 
	}, function(newValue, oldValue) {
		if(newValue != oldValue &amp;&amp; !$scope.data.isMEE) {
			$timeout(function () {
				spAriaUtil.sendLiveMessage(newValue ? $scope.m.nextButtonDisabledMsg : $scope.m.nextButtonEnabledMsg, "polite");
			});
		}
	});
	/********************************************************************************************/
	/********************************     Guide Navigation End    *******************************/
	/*****###############################################################################********/
	/********************************************************************************************/
	/********************************         Attachments         *******************************/
	/*****###############################################################################********/
	function initAttachmentHandlers() {
		var setAttachments;
		var appendError = function (error) {
			spUtil.addErrorMessage(error.msg + error.fileName);
		};
		for (var i = 0; i &lt; $scope.includedItems.length; i++) {
			$scope.includedItems[i].attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
			$scope.includedItems[i].attachmentHandler.setParams($scope.includedItems[i].targetTable, $scope.includedItems[i].sysparm_item_guid, 1024 * 1024 * $scope.data.maxAttachmentSize);
		}
	}
	
	$scope.uploadAttachments = function(item, files) {
		spAttachmentUpload.uploadAttachments(item.attachmentHandler, files);
	};
	
	$scope.$on('dialog.upload_too_large.show', function(e){
		$log.error($scope.m.largeAttachmentMsg);
		spUtil.addErrorMessage($scope.m.largeAttachmentMsg);
	});
	$scope.initAttachmentCallbacks = function (itemIndex) {
		$scope.includedItems[itemIndex].attachmentHandler.setAttachments = function (attachments, action) {
			$scope.includedItems[itemIndex].attachments = attachments;
			if (action === "added") {
				spAriaUtil.sendLiveMessage($scope.m.attachmentAddedMsg);
				if ($scope.includedItems[itemIndex].attachments.length &gt; 0)
				$scope.includedItems[itemIndex].attachment_submitted = true;

			}
			if (action === "renamed")
				spAriaUtil.sendLiveMessage($scope.m.renameSuccessMsg);
			if (action === "deleted") {
				spAriaUtil.sendLiveMessage($scope.m.deleteSuccessMsg);
				if ($scope.includedItems[itemIndex].attachments.length == 0)
					$scope.includedItems[itemIndex].attachment_submitted = false;
			}
			$scope.includedItems[itemIndex].attachment_action_in_progress = false;
            spUtil.get($scope, {
                action: "from_attachment"
            });
		};
		$scope.includedItems[itemIndex].confirmDeleteAttachment = function(attachment) {
			spModal.confirm($scope.data.msgs.delete_attachment).then(function() {
				$scope.includedItems[itemIndex].attachmentHandler.deleteAttachment(attachment);
				$scope.includedItems[itemIndex].attachment_action_in_progress = true;
				$scope.setFocusToAttachmentButton();
			});
		}
	}
	
	function getRecurringPriceDisplay(frequencyMap, frequencySequence) {
		var rec_price_display = [];
		frequencySequence.forEach(function (seq) {
			if (frequencyMap[seq])
				rec_price_display.push(frequencyMap[seq] + " " + seq);
		});
		return rec_price_display;
	}
	/********************************************************************************************/
	/********************************       Attachments  End      *******************************/
	/*****###############################################################################********/
	/********************************************************************************************/
	/********************************        UTIL Functions       *******************************/
	/*****###############################################################################********/
	function evalGuidePrice() {
		$scope.price = 0;
		var frequencyMap = {};
		for (var i = 0; i &lt; $scope.includedItems.length; i++) {
			if ($scope.includedItems[i].included &amp;&amp; $scope.includedItems[i].process_price) { 
				var qty = parseInt($scope.includedItems[i].quantity);
				var pricing = $scope.includedItems[i]._pricing;
				var effectivePrice = 0;
				var effectiveRecurringPrice = 0;
				if (typeof $scope.includedItems[i].price != "undefined") {
					effectivePrice = $scope.includedItems[i].price;
				}
				if (typeof $scope.includedItems[i].recurring_price != "undefined") {
					effectiveRecurringPrice = $scope.includedItems[i].recurring_price;
				}
				if (effectiveRecurringPrice &gt;= 0 &amp;&amp; pricing.rfd) {
					if(frequencyMap[pricing.rfd])
						frequencyMap[pricing.rfd] += effectiveRecurringPrice * qty;
					else
						frequencyMap[pricing.rfd] = effectiveRecurringPrice * qty;
				}
				if (effectivePrice &gt;= 0)
					$scope.price += effectivePrice * qty;
			}
		}
		frequencyMap.price = $scope.price;
		$scope.server.get({
			action: "format_prices",
			prices: frequencyMap
		}).then(function(response) {
			$scope.price_display = response.data.frequencyMap.price;
			$scope.recurring_price_display = getRecurringPriceDisplay(response.data.frequencyMap, response.data.frequencySequence);
		});
	}
	
	function evalIncludes() {
		// don't allow submit while waiting on included items eval
		$scope.evaluatingIncludes = true;
		$scope.includedItems = [];
		var guideData = getFieldsData($scope.data.sc_cat_item);
		guideData.sysparm_id = $scope.data.sys_id;
		guideData.without_cart = true;
		guideData._fields = $scope.data.sc_cat_item._fields;
		guideData.cascade = $scope.data.sc_cat_item.cascade;
		guideData.has_requested_for_variable = $scope.data.sc_cat_item.has_requested_for_variable;
		if ($scope.data.workspaceParams) {
			guideData.sysparm_parent_sys_id = $scope.data.workspaceParams.sysparm_parent_sys_id;
			guideData.sysparm_parent_table = $scope.data.workspaceParams.sysparm_parent_table;
		}
		$scope.server.get({
			action: "init_guide",
            	orderGuideData: guideData,
		options: c.options
		}).then(function(response) {
			if (response.data.error) {
				$scope.guide_step--;
				return;
			}
            var itemGlobalData = response.data.itemGlobalData;
            var includedItems = itemGlobalData.items;
            var massageItemWithGlobalDataFn = getDataTransferFunction(itemGlobalData);
            includedItems.forEach(function(item) {
				item.trusted_description = $sce.trustAsHtml(item.description);
                massageItemWithGlobalDataFn(item);
				var _val = false;
				Object.defineProperty(item, 'isOpen', {
                    get: function() {
                        return _val;
                    },
					set: function(val) {
						_val = val;
						if (val)
							$rootScope.$broadcast('spModel.view.render', item.sys_id);
					}
				});
			});
            $scope.includedItems = includedItems;
            $scope.requested_for_variable_count = response.data.requested_for_variable_count;
            $scope.showIncludeToggle = response.data.showIncludeToggle;
			$scope.isSequencedGuide = response.data.isSequencedGuide;
            initAttachmentHandlers();
			$scope.totalIncluded = $scope.includedItems.length;
			$scope.conflictingCartDomainMsg = response.data.conflictingCartDomainMsg;
			$scope.evaluatingIncludes = false;
			$scope.guide_requested_for = response.data.guide_requested_for;
			$scope.choiceListQuantity = response.data.choiceListQuantity;
			addCabrilloBottomButtons({
				title: [$scope.data.msgs.prevMsg, $scope.data.msgs.nextMsg],
				fn: [$scope.goPrev, $scope.goNext]
			});
		});
	}
	
    function getDataTransferFunction(itemGlobalData) {
        return (function(item) {
            //populate ui policies
            item.policy = getObjectsArrayFromIdArray(item.policy, itemGlobalData.ui_policies) || [];
            //populate ui scripts
            item.ui_scripts = itemGlobalData.ui_scripts || [];
            //populate client scripts
            if (item.client_script) {
                item.client_script.onLoad = getObjectsArrayFromIdArray(item.client_script.onLoad, itemGlobalData.client_scripts) || [];
                item.client_script.onChange = getObjectsArrayFromIdArray(item.client_script.onChange, itemGlobalData.client_scripts) || [];
                item.client_script.onSubmit = getObjectsArrayFromIdArray(item.client_script.onSubmit, itemGlobalData.client_scripts) || [];
            }
        });
    }

    function getObjectsArrayFromIdArray(idArray, globalObjectHolder) {
        var objectsArray = [];
        for (var i in idArray)
            objectsArray.push(globalObjectHolder[idArray[i]]);
        return objectsArray;
    }

	function getInvalidFields(gForm) {
		gForm._invalidFields = [];
		var fields = gForm.getFieldNames();
		for (var j = 0; j &lt; fields.length; j++) {
			var field = gForm.getField(fields[j]);
			if (field.isInvalid)
				gForm._invalidFields.push(field);
		}
	}	
	
	function getCurrentGForm() {
		if ($scope.guide_step == 0)
			return includedGformInstances[$scope.data.sc_cat_item.sys_id];
		else {
			var openItem = $scope.includedItems.find(function(item){
				return item.isOpen === true;
			});
			return includedGformInstances[openItem.sys_id];
		}
	}
	
	function openItemHelper(item, state, defer) {
		for (var i = 0; i &lt; $scope.includedItems.length; i++)
			if ($scope.includedItems[i].sys_id == item) {
				$scope.includedItems[i].included = state == 'true';
				$scope.includedItems[i].isOpen = true;
				$scope._atf.expose('g_form', spAtf.augmentForm(includedGformInstances[item]));
				defer.resolve();
			}
	}

	function getFieldsData(item) {
        var fieldData = {
            "variables": {}
        };
		for(var field in item._fields) {
			var fieldValue = "";
			if (item._fields[field].value != null &amp;&amp; typeof item._fields[field].value != "string")
				fieldValue = item._fields[field].value.toString();
			else
				fieldValue = item._fields[field].value;
			fieldData.variables[item._fields[field].name] = fieldValue;
		}
		return fieldData;
	}

	function getGuideItems(cartname) {
		var items = [];
		var item;
		for(var i = 0; i &lt; $scope.includedItems.length; i++) {
			if($scope.includedItems[i].included) {
				item = getFieldsData($scope.includedItems[i]);
				item.sysparm_id = item.sysparm_active = $scope.includedItems[i].sys_id;
				item.sysparm_quantity = $scope.includedItems[i].quantity;
				item.sysparm_cart_name = cartname;
				item.sysparm_item_guid = $scope.includedItems[i].sysparm_item_guid;
				items.push(item);
			}
		}
		return items;
	}
	/*********************************************************************************************/
	/********************************          UTIL Functions End           **********************/
	/*****################################################################################********/
	/*********************************************************************************************/
	/********************************           Submit Handlers             **********************/
	/*****################################################################################********/
	$scope.triggerAddToCart = function() {
		var webAnalyticsMsgSuffix = $scope.data.isMEE ? " - NOW Mobile" : "";
		clearCabrilloBottomButtons();
		if($scope.conflictingCartDomainMsg) {
			spUtil.addErrorMessage($scope.conflictingCartDomainMsg);
			return;
		}
		if($scope.submitted)
			return;
		$scope.server.get({
			action: 'log_request_cart',
            itemDetails: {
                sys_id: $scope.data.sc_cat_item.sys_id,
										name: $scope.data.sc_cat_item.name,
                sys_class_name: $scope.data.sc_cat_item.sys_class_name
            }
		});
		$scope.submitted = true;
		$scope.server.get({
			action: "add_to_cart",
			items: getGuideItems(""),
			sys_id: $scope.data.sys_id,
			guide_requested_for: $scope.guide_requested_for
		}).then(function(response) {
			$rootScope.$broadcast("$sp.service_catalog.cart.add_item");
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
			$scope.$emit("$sp.sc_order_guide.add_to_cart");
			window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Cart' + webAnalyticsMsgSuffix, 'Order Guide Added to Cart', 0, 0);
			if ($scope.data.isMEE) {
				$scope.submitted = true;
				cabrillo.message.showMessage(cabrillo.message.SUCCESS_MESSAGE_STYLE, i18n.getMessage('Items have been added successfully to your cart'));
				$timeout(function () {
					cabrillo.flowControl.flowEnded();
					return;
				}, 200);
				return;
			}
			spModal.open({
				message: i18n.getMessage('Items have been added successfully'),
				size: 'sm',
				backdrop: 'static',
				keyboard: false,
				noDismiss: true,
                buttons: [{
                        label: i18n.getMessage('Catalog Home'),
                        cancel: true
                    },
                    {
                        label: i18n.getMessage('View Cart'),
                        primary: true
                    }
				]
			}).then(function() {
				$location.search("id=sc_cart");
			}, function() {
				$location.search("id=sc_home");
			});
		}, function(error) {
				spUtil.addErrorMessage(error);
				return;
		});
	}
	// order / create request
	$scope.triggerSubmit = function() {
		clearCabrilloBottomButtons();
		if ($scope.submitted)
			return;
		$scope.submitted = true;
		var hasItems = $scope.includedItems.filter(function(item) {
			return item.sys_class_name != 'sc_cat_item_producer';
		}).length &gt; 0;
		$scope.showOrderConfirmation = showOrderConfirmation();
		if ($scope.showOrderConfirmation) {
			var requested_for_id = "";
			var requested_for_display = "";
			if ($scope.data.requested_for &amp;&amp; $scope.data.requested_for.id &amp;&amp; $scope.data.requested_for.displayValue) {
				requested_for_id = $scope.data.requested_for.id;
				requested_for_display = $scope.data.requested_for.displayValue;
			}
			//Required to pass as payload for usage as embeddedWidget
			var embeddedWidgetOptions = {
				"auto_redirect" : "true",
				"requested_for_id" : requested_for_id,
				"requested_for_display" : requested_for_display
			};
			var payload = {
				cart: '' + $scope.data.sys_id,
				itemDetails: {
					items: getGuideItems('' + $scope.data.sys_id),
					request_method: $scope.data.sc_cat_item.request_method,
					sys_id: $scope.data.sc_cat_item.sys_id, 
					name: $scope.data.sc_cat_item.name,
					sys_class_name: $scope.data.sc_cat_item.sys_class_name
				},
				workspaceParams: $scope.data.workspaceParams,
				action: "order_guide"
			};
			for (var embeddedOption in embeddedWidgetOptions) {
				payload[embeddedOption] = c.options[embeddedOption] || embeddedWidgetOptions[embeddedOption];
			}
			$scope.server.get(payload).then(function(response) {
				var orderGuideModalCtrl;
				var unregister = $scope.$on('$sp.service_catalog.cart.cancel_order', function(){
					orderGuideModalCtrl.close();
					$scope.submitted = false;
					$timeout(function () {
						addCabrilloBottomButtons({
							title: [i18n.getMessage('Add to Cart'), $scope.submitButtonMsg],
							fn: [$scope.triggerAddToCart, $scope.triggerSubmit]
						});
						$('#submit-btn').focus();
					});
				});
				var closeModalOnSubmit = $scope.$on("$sp.service_catalog.cart.submitted", function () {
					orderGuideModalCtrl.close();
					$scope.submitted = true;
				});
				var orderGuideModal = angular.copy(response.data.orderGuideModal);
				orderGuideModal.options.afterOpen = function(ctrl){
					orderGuideModalCtrl = ctrl;
				};
				orderGuideModal.options.afterClose = function() {
					unregister();
					closeModalOnSubmit();
					$scope.orderGuideModal = null;
					orderGuideModalCtrl = null;
					var elm = document.getElementsByName("order")[0];
					if (elm)
					elm.focus();
				};
				$scope.orderGuideModal = orderGuideModal;
			});
			return $scope.submitted;
		} else {
			if ($scope.data.isMEE)
				cabrillo.viewLayout.showSpinner();
			$scope.data.action = 'checkout_guide';
			$scope.data.guideItems = getGuideItems('' + $scope.data.sys_id);
			$scope.data.guide_requested_for = $scope.guide_requested_for;
			$scope.server.update().then(function(response) {
				$scope.data.action = undefined;
				$scope.data.guideItems = undefined;
                appendOrderNowOutputParams($scope.data.result);
				$scope.$emit("$sp.sc_order_guide.submitted", $scope.data.result);
				window.GlideWebAnalytics.trackEvent('Service Catalog' + webAnalyticsMsgSuffix, 'Order Guide Request', 'Catalog Request Submitted', $scope.includedItemsCounter, 0);
				$scope.submitted = true;
				hideSpinner();
				if ($scope.options.auto_redirect == 'false') {
					spUtil.addInfoMessage($scope.m.requestSubmitted);
					return;
                } else {
					if ($scope.data.result.request_id) 
						$location.search('id=sc_request&amp;is_new_order=true&amp;table=sc_request&amp;sys_id=' + $scope.data.result.request_id);
					else 
						$location.search('id=requests&amp;is_new_order=true');
				}
			}, function(error) {
				hideSpinner();
				spUtil.addErrorMessage(error);
				return;
			});
			return $scope.submitted;
		}
	}

	function showOrderConfirmation() {
		return $scope.data.sys_properties.twostep &amp;&amp; $scope.data.sc_cat_item.request_method != "submit" &amp;&amp;
            !$scope.data.sc_cat_item.has_requested_for_variable &amp;&amp; $scope.requested_for_variable_count !== $scope.totalIncluded;
	}
	
	function hideSpinner() {
		if ($scope.data.isMEE)
			cabrillo.viewLayout.hideSpinner();
	}
	
	$scope.$watch('guide_step', function(newValue, oldValue) {
		if(newValue !== oldValue) {
			$scope.$$postDigest(function () {
				angular.element('#guide-step-' + newValue).focus();
			});
		}
	});
	
	//If its a two step process, ordernow will return sys_id, number and table. In case of checkout,  
	//If the cart has one producer, output would contain sys_id, number and table. But in case of cat items,  sys_id, number, table
	//would be empty. 
	//Making the output consitent between the above three cases.
    function appendOrderNowOutputParams(output) {
            output.sys_id = output.sys_id || output.request_id;
            output.number = output.number || output.request_number;
            output.table = output.table || 'sc_request';
	}
	/*********************************************************************************************/
	/********************************        Submit Handlers End           ***********************/
	/*****################################################################################********/
	var catalogUtil = {
		updateGform: function() {
			var g_form = getCurrentGForm();
			if (g_form)
				$scope._atf.expose('g_form', spAtf.augmentForm(g_form));
		},
		addRow: function(fieldId, timeoutInMS) {
			var deferred = $q.defer();
			var g_form = getCurrentGForm();
			if (g_form) {
				if (timeoutInMS &lt;= 0)
					timeoutInMS = 1000;
				$scope.$broadcast("$sp.sc_multi_row.create_row", fieldId, g_form.getSysId());
				$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
					if (gFormInstance.getSysId() == fieldId)
						deferred.resolve();
				});
				$timeout(function() {
					deferred.reject();
				}, timeoutInMS);
            } else
				deferred.reject();
			return deferred.promise;
		},
		navigateToStep: function(num, timeout) {
			var defer = $q.defer();
			var step = parseInt(num) - 1;
			if (Math.abs(step - $scope.guide_step) != 1) {
				defer.reject("Can't navigate to next step");
				return defer.promise;
			}
			if (step &gt; $scope.guide_step)
				$scope.goNext(timeout);
			else {
				$scope.goPrev();
				defer.resolve();
			}
			var cleanup = $scope.$on('$sp.service_catalog.form_submit_failed', function() {
				cleanup();
				defer.reject("Can't navigate to next step");
			});
			var cleanup1 = $scope.$on('$sp.service_catalog.form_submitted', function() {
				cleanup1();
				defer.resolve("Can navigate to next step");
			});
			return defer.promise;
		},
		validateIncludedList: function(list, stage) {
			var items = list.split(',').reduce(function(obj, item) {
				obj[item] = false;
				return obj;
			}, {});
			var included = stage == 1 ? $scope.includedItems : $scope.includedItems.filter(function(item) {
				return item.included == true;
			});
			if (Object.keys(items).length != included.length)
				return false;
			for (var i = 0; i &lt; included.length; i++)
				if (!items.hasOwnProperty(included[i].sys_id))
					return false;
			return true;
		},
		openItem: function(item, state, timeoutInMS) {
			if (timeoutInMS &lt;= 0)
				timeoutInMS = 10000;
			var defer = $q.defer();
			if (includedGformInstances[item]) {
				openItemHelper(item, state, defer);
			}
			$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
				if (gFormInstance.getSysId() == item) {
					openItemHelper(item, state, defer);
				}
			});
			$timeout(function() {
				defer.reject();
			}, timeoutInMS);
			return defer.promise;
		},
		getPrice: function() {
			var res = {};
			var item = $scope.includedItems.find(function(itemData) {
				return itemData.isOpen == true;
			});
			if (item) {
				res.price = item.price;
				res.recurring_price = item.recurring_price;
				res.recurring_frequency = item.recurring_frequency;
			}
			return res;
		},
		getGuidePrice: function() {
			return $scope.price_display;
		},
		addToCart: function() {
			var defer = $q.defer();
			if ($scope.guide_step == 2)
				$scope.triggerAddToCart();
			if (!$scope.submitted)
				defer.reject("Can't submit form.");
			else
				defer.resolve();
			return defer.promise;
		},
		submitOrderGuide: function() {
			var defer = $q.defer();
			if ($scope.guide_step == 2 &amp;&amp; $scope.triggerSubmit()) {
				if ($scope.showOrderConfirmation)
					defer.resolve();
				else {
					var cleanUp = $scope.$on('$sp.sc_order_guide.submitted', function(o, result) {
						$timeout(function() {
							cleanUp();
							result.single_step = true;
							defer.resolve(result);
						}, 10);
					});
				}
			} else
				defer.reject();
			return defer.promise;
		}
	};
	/********************************************************************************************/
	/********************************                ATF End            *************************/
	/*****###############################################################################********/
	/********************************************************************************************/
	/********************************            Cabrillo Start         *************************/
	/*****###############################################################################********/
	function clearCabrilloBottomButtons() {
		if ($scope.data.isMEE) {
			cabrillo.viewLayout.setBottomButtons();
		}
	}

	function showCabrilloBottomButtons() {
		if (!$scope.data.isMEE) return;
		if ($scope.guide_step === 0) {
			addCabrilloBottomButtons({
				title: [$scope.data.msgs.nextMsg],
				fn: [$scope.goNext]
			});
		}
		if ($scope.guide_step === 1) {
			var itemOpened = $scope.includedItems.find(function (item) {
				return item.isOpen;
			});
			if (itemOpened) {
				$scope.showCancel(itemOpened.sys_id);
			}
		}
	}
	
	function addCabrilloBottomButtons(buttonDetails) {
		if ($scope.data.isMEE) {
			var buttons = [];
			clearCabrilloBottomButtons();
			switch($scope.guide_step) {
				case 0:
                    buttons = [{
							title: buttonDetails.title[0],
							enabled: true,
							backgroundColor: $scope.data.sys_properties.mobileNativeColor,
							textColor: '#FFFFFF'
						}];
					cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
						buttonDetails.fn[buttonIndex]();
					});
					cabrillo.viewLayout.showBackButton();
					break;
				case 1:
                    buttons = [{
							title: buttonDetails.title[0],
							enabled: true,
							backgroundColor: '#f7f7f7',
							textColor: '#000000'
						},
						{
							title: buttonDetails.title[1],
							enabled: true,
							backgroundColor: $scope.data.sys_properties.mobileNativeColor,
							textColor: '#FFFFFF'
                        }
                    ];
					cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
						//Disable next button in choose option if all the items are marked as not included: This will be taken care in goNext function
						// however the previous button should still work
						if (!($scope.submitted) || buttonIndex === 0) {
							buttonDetails.fn[buttonIndex]();
						}
					});
					cabrillo.viewLayout.hideBackButton();
					break;
				case 2:
					// Displaying 'Edit' icon on top right corner
					buttons = [{
							title: i18n.getMessage('Edit'),
							enabled: true
					}];
					cabrillo.viewLayout.setNavigationBarButtons(buttons, function(index) {
						cabrillo.viewLayout.setNavigationBarButtons();
						$scope.goPrev();
					});
					if ($scope.data.sys_properties.cartEnabled &amp;&amp; $scope.showAddToCart) {
                        buttons = [{
								title: buttonDetails.title[0],
								enabled: true,
								backgroundColor: '#f7f7f7',
								textColor: '#000000'
							},
							{
								title: buttonDetails.title[1],
								enabled: true,
								backgroundColor: $scope.data.sys_properties.mobileNativeColor,
								textColor: '#FFFFFF'
                            }
                        ];
						cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
							buttonDetails.fn[buttonIndex]();
						});
					} else {
                        buttons = [{
								title: buttonDetails.title[1],
								enabled: true,
								backgroundColor: $scope.data.sys_properties.mobileNativeColor,
								textColor: '#FFFFFF'
							}];
						cabrillo.viewLayout.setBottomButtons(buttons, function(buttonIndex) {
							buttonDetails.fn[1]();
						});
					}
					cabrillo.viewLayout.hideBackButton();
					break;
			}
		}
	}
	function removeTabList() {
		var accordion = document.getElementById('id-accordion');
		if (accordion &amp;&amp; accordion.children &amp;&amp; accordion.children[0])
			accordion.children[0].setAttribute('role', '');
	}
	var mespOpenPopupUnregister = $rootScope.$on("mesp.popup.open", function() {
		// Timeout is to give a better user experience otherwise when this popup opens,
		// the cabrillo buttons will be displayed immediately giving a bad user experience.
		$timeout(function(){
			clearCabrilloBottomButtons();
		});
	});
	var mespClosePopupUnregister = $rootScope.$on("mesp.popup.close", function() {
		// Timeout is to give a better user experience otherwise when this popup opens,
		// the cabrillo buttons will be displayed immediately giving a bad user experience.
		$timeout(function(){
			showCabrilloBottomButtons();
		});
	});
	
	$window.onpageshow = function(){
		if(c.isNative)
			$scope.$emit('spModel.gForm.showNativeMobileButtons');
	};
	/**********************************************************************************************/
	/********************************            Cabrillo End           ****************************/
	/*****##################################################################################********/
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.order-guide-mobile {
  border: 0;
  box-shadow: none;
  .variables-mandatory-label {
    margin-left: 0.65rem;
    .fa.fa-asterisk {
      font-size: 0.75rem;
    }
  }
  .mobile-attachment-label {
    float: none;
    display: flex;
    justify-content: center;
    margin-top: 10px;
    button, .add-attachment-content {
      color: $link-color;
    }
  }
  
  .mobile-summary{
  	display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .iconlink {
  	padding: 0 !important;
    width: 100%;
    span.step-text {
      font-weight: bold;
      font-size: 20px;
      margin: 0 !important;
      top: 0;
      padding-left: 5px;
    }
  }
  
  .less-text .read-more,
  .more-text .read-less {
    display: block;
    text-align: center;
    margin: 10px auto;
  }
  
  .list-group-mobile {
		.accordion-header {
      &amp;amp;.disable-row .accordion-toggle {
        pointer-events: none;
        color: $gull-grey;
      }
      .og-mobile-include-check-wrapper {
          min-width: 20px;
          position:relative;
        }
        
        .og-check-bucket {
          display: block;
          padding-left: 0px;
          min-height: 30px;
          width: 60px;
          height: 100%;
          position: relative;

          input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
          }

          .og-check {
            position: absolute;
            pointer-events: auto;
            top: 50%;
			transform: translateY(-50%);
            height: 30px;
            width: 30px;
            background-color: #fff;
            border: 1px solid $mesp-input-border;
            border-radius: 50%;

            &amp;amp;:after {
              content: "";
              position: absolute;
              display: none;
              left: 12px;
              top: 8px;
              width: 5px;
              height: 10px;
              border: solid #fff;
              border-width: 0 2px 2px 0;
              -webkit-transform: rotate(45deg);
              -ms-transform: rotate(45deg);
              transform: rotate(45deg);
            }
          }

          input:checked ~ .og-check {
            background-color: $mesp-input-radio;
            &amp;amp;:after {
              display: block;
            }
          }
        }

      .accordion-toggle {
        &amp;amp;:focus {
        	border: 0;
          box-shadow: none;
        }
        
        .row {
          padding: 20px 0;
          margin: 0 !important;
          &amp;amp;&amp;gt;div {
          	padding: 0;
          }
        }

        .og-mobile-item {
          display: grid;
          grid-template-columns: auto 1rem;
          align-items: center;
					
          .item-name {
            min-width: 6ch;
            
            &amp;amp; ~ label {
            	justify-self: end;
              margin: 0px;
              font-weight: inherit;
							line-height: inherit;
              font-size: 85%;
              color: $text-muted;
            }
          }
          
          .accordion-icon {
            margin-left: 0px;
            padding-right: 3px;
            text-align: right;

            &amp;amp;:before {
              content: "\f105";
              font-family: FontAwesome;
              font-size: 20px;
            }
          }
        }
      }

      .collapsing {
        transition: none;
      }

	    .panel-heading, .panel-heading:hover {
        background-color: transparent;
      }
    }
   
    .guide-item-details-wrapper-mobile {      
      position: fixed !important;
      background-color: #FFF !important;
      z-index: 1 !important;
      height: 100% !important;
      width: 100% !important;
      top: 0 !important;
      left: 0 !important;
      overflow: scroll;
      
      .title-mobile {
        font-size: 22px;
        font-weight: 600;
      }
      
      .og-item-price {
        padding: 23px 0px 23px 14px;
        margin: 18px -8px 0px -8px;
        border-top: 1px solid $mesp-input-border;
        strong {
          font-size: 18px;
        }
        span {
          font-size: 14px;
        }
        label {
          display: block;
        }
      }
    }
    
    .summary {
      section {
	      display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 5px 5px 5px 0;
      }
      
      .guide-item {
      	display: flex;
        align-items: center;
      }
      
      .guide-item-quantity {
        padding: 5px 10px;
        margin: 0 10px 0 0;
        background-color: #F0F0F0;
        border-radius: 5px;
      }
      
      .guide-item-name {
      	display: flex;
        flex-direction: column;
        align-items: flex-start;
        min-width: 10ch;
      }
    }
  }
}

.guide-item-details-wrapper {
	position: relative;
  background-color: #F8F9F9;
}
.variables-mandatory-label {
 margin: 2rem 0px 1.5rem; 
}

.empty-state-content {
  margin-top: 30px;

  h3 {
    margin-bottom: 5px;
    text-align: center;
  }
}

.attachment-label {
  float: right;
  font-weight: normal;
  cursor: pointer;
}

.guide-image {
  max-height: 240px;
  padding: 5px;
  display: inline;
}

.panel-button {
  float: none;
}

.file-list-wrap {
	margin-bottom: 10px;
}

.guide-item-image {
  max-height: 150px;
  padding: 10px;
  display: inline-block !important;
}

.item-icon {
  max-width:100%;
  height:auto;
}

.disabled-mask {
  background-color: #F8F9F9;
  position: absolute;
  z-index: 8;
  opacity: 0.6;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  border-radius: 5px;
  cursor: not-allowed;
}

.guide-description, .guide-nav, .tab-item, .og-timeline, .guide-row {
  overflow: auto;
}


.guide-nav {
  padding: 0px 40px 20px 40px;
}

.guide-nav-setp1 {
  padding-right: 27px;
}

.iconlink {
  margin: 5px 0px 5px 0px;
  &amp;amp;[aria-selected="true"] {
   font-weight: bold; 
  }
}

.circle_icon {
    border: 3px solid;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    padding: 20px;
    display: inline-block;
    .step-icon {
      font-size: 20px;
    	position: relative;
    	top: -9px;
    	left: -10px;
    }
}

.step-text {
  	position: relative;
}

.step_active {
  color: $primary;
}

.step_inactive {
  color: $text-muted;
  opacity: 0.8;
}

.accordion-header {
  &amp;amp;.disable-row .accordion-toggle {
    pointer-events: none;
    color: $gull-grey;
    opacity: 0.6;
  }
  .panel-heading {
    padding: 0;
    .row {
      padding: 15px;
      margin: 0;
    }
    .align-text {
      top: 3px;
    }
    label {
      font-size: inherit;
    }
  }
  &amp;amp;:not(.disable-row) {
    .panel-heading {
      .accordion-toggle:hover {
        background-color: lighten($primary, 45%);
      }
    }
  }
  &amp;amp;.panel-open {
    .panel-heading {
      border-bottom: 1px solid #dee5e7;
      &amp;amp;:hover {
    		background-color: transparent;
  		}
    }
  }
  .panel-title {
    	font-size: inherit;
  }
}

.list-group {
	padding-left: 28px;
  padding-right: 28px;
  padding-top: 10px;
  padding-bottom: 0px;
}

.accordion-icon {
  margin-left: 30px;
}


.mandatory-header {
  border-left: 3px #d9534f solid !important;
}

.mandatory-icon {
  color: #d9534f;
  margin-left: -9px
}

.timeline-container {
  position: sticky;
  position: -webkit-sticky;
  position: -ms-sticky;
  height:auto;
  top: -($font-size-h2 + $font-size-base + 48px);
  z-index: 10;
  background-color: inherit;
  border-radius: 4px 4px 0 0;
}

.og-timeline .iconlink label {
  font-weight: 600;
  font-size: 0.8em;
  line-height: 1.8em;
}

.include-loader {
  text-align: center;
  
}

.og-switch {
  min-width: fit-content;
  .input-switch {
    font-size: inherit;
    label.switch {
      border-radius: 20px;
      &amp;amp;::before {
        border-radius: 20px;
      }
    }
    input[type=checkbox]:checked ~ .switch {
    	background-color: $primary;
		}
  }
}

.summary {
  tr {
    height: 69px;
  }
  margin-bottom: 0;
  .summary-excluded {
    color: #ccc;
  }
  .not-included-pill {
    background-color: #f0ad4e;
    border-radius: 20px;
    font-size: 11px;
    font-weight: bolder;
    white-space: nowrap;
  }
}

.m-r-6 {
  margin-right: 6px !important;
}

.wrap-word {
  word-break: break-word;
  hyphens: auto;
}

.fav {
  position:relative;
  top: -10px;
}

//animation

.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
  animation: fa-spin 1s infinite steps(8);
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
/* IE10+ CSS styles go here */
   .timeline-container {
   position: static;
   top: 0px;
   }
}

 .help-tag-icon {
  	color: $sc-field-error-color;
  }
  
@media only screen and (max-width:992px) {
  .pull-left-xs {
    float: left !important;
  }
  
  .left-align-xs {
    text-align: left !important;
  }
  
  .padding-left-xs {
    padding-left:15px !important;
  }
  
  .iconlink {
    padding: 0 15px;
  }
  
  .wrapper-cart-xs {
    padding: 10px !important;
  }
  
  .not-included {
    padding: 3px !important;
  }
  
  .pull-right-xs {
    float: right !important;
  }
  
  .remove-margin-bottom-xs {
    margin-bottom: 0px !important;
  }
  
  .add-margin-bottom-xs {
    margin-bottom: 15px !important;
  }
  
  .list-group {
    padding-left: 13px !important;
    padding-right: 13px !important;
  }

  .border-top-xs {
    border-top: none;
  }
  
  .border-bottom-xs {
    border-bottom: none;
  }
  
  .button-image-xs {
    padding-left: 7%;
    line-height: 160%;
  }
  
  .guide-image {
    display: block;
    margin: auto;
    max-height: 220px
  }
  
  .og-switch {
    padding-top:10px;
    .input-switch {
      margin-left: 5px !important;
    }
    .input-switch input[type=checkbox]  ~ .switch {
       height: 20px;
       width: 35px
    }
    .input-switch input[type=checkbox]:checked  ~ .switch:before {
      left: 15.5px;
    }
   }
  .summary {
     tr {
         height: 33px;
      }
    .summary-excluded {
    	color: inherit;
  	}
  }
  .timeline-container {
    top: -($font-size-h2 + $font-size-base + 28px);
  }
  .guide-nav-setp1 {
    padding: 0 13px 20px 13px;
  }
	.timeline-container {
     position: inherit;
  }
  .included-xs {
    font-size:13px; 
    vertical-align:3px;
  }
  .panel-body {
    padding: 0;
  }
  .guide-item-image-xs {
    max-height: 120px;
  	padding: 10px;
    float: left;
  }
  .guide-description {
    display: inline;
  }
  .read-more, .read-less {
    font-size: 15px;
    cursor: pointer;
  }
  .more-text {
    display: none;
  }
}
.cat-item-quantity-group {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}
.cat-item-quantity-box {
  flex-grow: 1;
  padding-left: 12px;
  padding-right: 5px;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data&gt;{&amp;#13;
"options": {&amp;#13;
"sys_id": "6690750f4f7b4200086eeed18110c761"&amp;#13;
}&amp;#13;
}&lt;/demo_data&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color,title&lt;/field_list&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;widget-sc-order-guide-v2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function(scope, elem) {
		scope.setFocusToAttachmentButton = function () {
			elem.find('.sp-attachment-add')[0].focus();
		}

		scope.setFocusToAttachment = function (attachmentId) {
			setTimeout(function () {
				var inboxArray = elem.find('#' + attachmentId);
				if (inboxArray)
					inboxArray.find('a.view-attachment').focus();
			}, 100);
		}
}]]&gt;&lt;/link&gt;&lt;name&gt;SC Order Guide&lt;/name&gt;&lt;option_schema&gt;[{"hint":"This property will 'show less' description of order guide with an option of 'read more' to read full description.","name":"show_less_orderguide","default_value":"true","section":"Presentation","label":"Enable Show More/Less for Order Guide description on Mobile","type":"boolean"},{"hint":"Show the widget in compact mode","name":"compact_mode","section":"Presentation","default_value":"false","label":"Compact Mode","type":"boolean"},{"hint":"Hide Delivery Time in each Item","name":"hide_delivery_time","section":"Presentation","default_value":"false","label":"Hide Delivery Time","type":"boolean"},{"hint":"Show the add to cart button","name":"show_add_cart_button","section":"Behavior","default_value":"true","label":"Show Add to Cart","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function () {
	var guideJS;
	data.isTwoStepEnabled = gs.getProperty('glide.sc.sp.twostep');
	//For cascading, initialising the below vairiables
	var variableClassToCascade = ["RequestedForQuestion"];
	var guideVariableNameMap = {};
	var guideVariableClassMap = {};
	var localInput = input; //to safeguard pullution of "input" via BR or other scripts
	
	data.sys_id = $sp.getParameter("sys_id") || localInput.sys_id || options.sys_id;
	data.engagement_channel = options.native_mobile ? 'mobile' : (options.isServiceWorkspace ? 'workspace' : 'sp');
	data.referrer = $sp.getParameter("referrer");
	
	if (localInput &amp;&amp; localInput.action == "from_attachment")
		return;
	if (localInput &amp;&amp; localInput.action == "get_requested_for") {
		data.requested_for = new global.GlobalServiceCatalogUtil().getRequestedFor(localInput.parentParams);
		return;
	}

	['auto_redirect', 'requested_for_id', 'requested_for_display'].forEach(function (embeddedWidgetOption) {
		if (localInput &amp;&amp; typeof localInput[embeddedWidgetOption] != 'undefined')
			options[embeddedWidgetOption] = localInput[embeddedWidgetOption];
	});
	if(localInput &amp;&amp; localInput.action == 'order_guide') {
		data.orderGuideModal = $sp.getWidget('widget-modal', {
																											embeddedWidgetId: 'sc-checkout', 
																											embeddedWidgetOptions: {
                cart: {
                    name: localInput.cart
                },
																																	action: localInput.action, 
																																	item: localInput.itemDetails, 
                requested_for: {
                    id: options.requested_for_id,
                    displayValue: options.requested_for_display
                },
																																	auto_redirect: options.auto_redirect,
																																	parentParams: localInput.workspaceParams,
																																	native_mobile: options.native_mobile,
																																    isServiceWorkspace: options.isServiceWorkspace,
																																	referrer: data.referrer
																																}, 
																											backdrop: 'static', 
																											keyboard: false, 
																											size: 'md'
																								});
		return;
    } else if (localInput &amp;&amp; localInput.action === 'log_request_cart') {
		 $sp.logStat('Add to Cart Request', localInput.itemDetails.sys_class_name, localInput.itemDetails.sys_id, localInput.itemDetails.name, $sp.getPortalRecord().getUniqueValue());
		 return;
    } else if (localInput &amp;&amp; localInput.action == "init_guide") {
		data.choiceListQuantity = getQuantityChoiceList();
		guideJS = new sn_sc.OrderGuide('' + localInput.orderGuideData.sysparm_id);
		var temp = guideJS.init(localInput.orderGuideData);
		if (JSUtil.notNil(temp.errMsg)) {
			gs.addErrorMessage(temp.errMsg);
			data.error = true;
			return;
		}
		for (var gf in localInput.orderGuideData._fields) {
			var field = localInput.orderGuideData._fields[gf];
			if (variableClassToCascade.indexOf(field._class_name) &gt; -1)
				guideVariableClassMap[field._class_name] = field;
			else
				guideVariableNameMap[field.name] = field;
		}
		//data.guide_requested_for will be needed to populate requested for field on cart_items of the included items.
        data.guide_requested_for = "";
        if (guideVariableClassMap.RequestedForQuestion)
		data.guide_requested_for = guideVariableClassMap.RequestedForQuestion.value;
        else {
            var defaultRequestedForValue = getDefaultRequestedForUser(localInput.orderGuideData, localInput.options);
            if (defaultRequestedForValue)
                guideVariableClassMap.RequestedForQuestion = {
                    'value': defaultRequestedForValue,
                    'displayValue': GlideUser.getUserByID(defaultRequestedForValue).getDisplayName()
                };
        }

		data.showIncludeToggle = guideJS.isIncludeItems();
		data.isSequencedGuide = guideJS.isSequencedGuide();
		data.requested_for_variable_count = 0;
        var item;
        var itemGlobalData = {
            items: [],
            client_scripts: {},
            ui_policies: {},
            ui_scripts: null
        };
		for(var i = 0; i &lt; temp.items.length; i++) {
			var includedItem = new sn_sc.CatItem(temp.items[i].sys_id);
            if (!validateAccessForIncludedItem(includedItem, data.guide_requested_for))
				continue;
			var itemData = {
				'sys_id': temp.items[i].sys_id, 
				'table': 'sc_cat_item', 
				'quantity': temp.items[i].quantity, 
				'is_guide': true, 
				'is_ordering': true,
				'variables' : {}
			};
			if (localInput.orderGuideData.cascade) {
				for (var gf in localInput.orderGuideData._fields) {
					var field = localInput.orderGuideData._fields[gf];
					itemData.variables[field.name] = field.value;	
				}
			}
			if (guideVariableClassMap.RequestedForQuestion)
				itemData.requested_for = guideVariableClassMap.RequestedForQuestion.value;
				
            item = $sp.getCatalogItem(itemData);
			item.quantity = temp.items[i].quantity;
			item.show_quantity = temp.items[i].show_quantity;
			item.isOrderGuideItem = true;
			item.included = true;
			item.delayView = true;
			item.sysparm_item_guid = gs.generateGUID();
			item._attachmentGUID = item.sysparm_item_guid;
			item.order = parseInt(temp.items[i].order);
			item.native_mobile = options.native_mobile == 'true';
			if (item.has_requested_for_variable)
				data.requested_for_variable_count++;

            transferDataIntoGloablObject(item, itemGlobalData);

			var table_name = 'sc_cart_item';
			var className = item.sys_class_name;
			if (!new global.CatalogItemTypeProcessor().canCreateNormalCartItem(className)) {
				if (className == 'sc_cat_item_producer') {
					var gr = new GlideRecord('sc_cat_item_producer');
					if (gr.get(item.sys_id))
						table_name = gr.getValue('table_name');
				}
			}
			item.targetTable = table_name;
			for (var field in item._fields) {
				var f = item._fields[field];
                                if (f.sys_readonly)
                                	continue;

				if (guideVariableClassMap[f._class_name])
			        	copyField(guideVariableClassMap[f._class_name], f);
				else if(localInput.orderGuideData.cascade &amp;&amp; guideVariableNameMap[f.name]) {
					copyField(guideVariableNameMap[f.name], f);
					if (f.type == 'sc_attachment')
						f.value = new VariableUtil().copyAttachment(guideVariableNameMap[f.name].value, 'ZZ_YY' + item.targetTable, item.sysparm_item_guid);
				}
                if (f._class_name === "RequestedForQuestion") {
                    handleDelegationCheckOnField(includedItem, f);
                    handleRequestedForReadOnlyOnField(data.guide_requested_for, f);
                }
			}
			if (temp.variable_assignments[item.sys_id]) {
				var cur = temp.variable_assignments[item.sys_id];
				for (var fieldId in cur) {
					var q = GlideappQuestion.getQuestion(fieldId);
					item._fields[q.getName()].value = cur[fieldId];
					if (q.getType() == 21 || q.getType() == 8) {
						q.setValue(cur[fieldId]);
						if (q.getType() == 21) {
							var vals = '' + q.getDisplayValues();
							vals = vals.slice(1, -1);
							item._fields[q.getName()].display_value_list = vals.split(', ');
						}
					}
					item._fields[q.getName()].displayValue = q.getDisplayValue();
				}
			}
            itemGlobalData.items.push(item);
		}
        data.itemGlobalData = itemGlobalData;
		if(temp.conflicting_cart_domain)
            data.conflictingCartDomainMsg = gs.getMessage("Your cart has item(s) belonging to '{0}' domain. To continue to add this item, clear the cart or check out the existing item(s).", temp.conflicting_cart_domain);
		return;
    } else if (localInput &amp;&amp; localInput.action == "checkout_guide") {
		guideJS = new sn_sc.OrderGuide('' + data.sys_id);
		var cartJS = new sn_sc.CartJS('' + data.sys_id);
        if (localInput.requested_for.id)
            cartJS.setRequestedFor(localInput.requested_for.id);
		for(var i = 0; i &lt; localInput.guideItems.length; i++) {
			if(localInput.guide_requested_for)
				localInput.guideItems[i].sysparm_guide_requested_for = localInput.guide_requested_for;
			try {
			guideJS.navigateFromMap(localInput.guideItems[i]);
			} catch (e) {
                //Should never Happen
			}
		}
		cartJS.activateGuide();
		cartJS.setParentParams(localInput.workspaceParams);
		cartJS.setEngagementChannel(data.engagement_channel);
		cartJS.setReferrer(data.referrer);
		data.result = cartJS.checkoutGuide();
		var portalId = $sp.getPortalRecord().getUniqueValue();
		$sp.logStat('Order Now Request', localInput.sc_cat_item.sys_class_name, localInput.sc_cat_item.sys_id, localInput.sc_cat_item.name, portalId);
		$sp.logStat('Cat Item Request', localInput.sc_cat_item.sys_class_name, localInput.sc_cat_item.sys_id, localInput.sc_cat_item.name, portalId);
		return;
    } else if (localInput &amp;&amp; localInput.action == "add_to_cart") {
		var cart = new sn_sc.CartJS();
		guideJS = new sn_sc.OrderGuide('' + localInput.sys_id);
		for(var i = 0; i &lt; localInput.items.length; i++) {
			if(localInput.guide_requested_for)
				localInput.items[i].sysparm_guide_requested_for = localInput.guide_requested_for;
			localInput.items[i].sysparm_cart_name = "";
			try {
			guideJS.navigateFromMap(localInput.items[i]);
			} catch (e) {
                //Should never happen
			}
		}
		if (guideJS.isUseCustomCart())
			new sn_sc.CartJS(localInput.sys_id).empty("");
		cart.activateGuide();
		return;
    } else if (localInput &amp;&amp; localInput.action == "format_prices") {
		data.frequencySequence = [];
		var gr = new GlideRecord('sys_choice');
		gr.addQuery('name', 'sys_frequency');
		gr.addQuery('language', gs.getSession().getLanguage());
		gr.orderBy('sequence');
		gr.query();
		while(gr.next())
			data.frequencySequence.push(gr.label.getDisplayValue());
		var spCurrencyFormatter = new SPCurrencyFormatter();
		data.frequencyMap = {};
		for(var key in localInput.prices)
			data.frequencyMap[key] = spCurrencyFormatter.format(localInput.prices[key]);
		return;
	}
	// portal can specify a catalog and category home page
	data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
	data.sc_category_page = $sp.getDisplayValue("sc_category_page") || "sc_category";
	var catalogID = $sp.getParameter("catalog_id") ? $sp.getParameter("catalog_id") + "" : "-1";
	var m = data.msgs = {};
	m.scHomeMsg = gs.getMessage("Service Catalog");
	m.step1 = gs.getMessage("Describe Needs");
	m.step2 = gs.getMessage("Choose Options");
	m.step3 = gs.getMessage("Summary");
	m.prevMsg = gs.getMessage("Previous");
	m.nextMsg = gs.getMessage("Next");
	m.submitMsg = gs.getMessage("Submit");
	m.orderNowMsg = gs.getMessage("Order Now");
	m.requestMsg = gs.getMessage("Request");
	m.submittedMsg = gs.getMessage("Submitted");
	m.createdMsg = gs.getMessage("Created");
	m.clickMsg = gs.getMessage("click here to view");
	m.dialogTitle = gs.getMessage("Delete Attachment");
	m.dialogMessage = gs.getMessage("Are you sure?");
	m.dialogOK = gs.getMessage("OK");
	m.dialogCancel = gs.getMessage("Cancel");
	m.requestSubmitted = gs.getMessage("Thank you, your request has been submitted.");
	m.viewAttachedImage = gs.getMessage("View attached image");
	m.downloadAttachment = gs.getMessage("Download attachment");
	data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
	if (isNaN(data.maxAttachmentSize))
		data.maxAttachmentSize = 24;
	m.alteastOneItemMsg = gs.getMessage("Include at least one catalog item");
	m.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
	m.attachmentAddedMsg = gs.getMessage("Attachment added successfully");
	m.renameSuccessMsg = gs.getMessage("Attachment renamed successfully");
	m.deleteSuccessMsg = gs.getMessage("Attachment deleted successfully");
	m.invalidRecordMsg = gs.getMessage('You are either not authorized or record is not valid.');
	m.delete_attachment = gs.getMessage("Delete Attachment?");
    m.chooseOptionsOpenedMsg = gs.getMessage("Opened Choose options");
	m.orderSummaryOpenedMsg = gs.getMessage("Opened order guide summary");
	m.nextButtonEnabledMsg = gs.getMessage("Next button enabled");
	m.nextButtonDisabledMsg = gs.getMessage("Next button disabled");
	data.hideDeliveryTime = (options.hide_delivery_time == 'true');
	data.recordFound = true;
	if (options.sys_id)
		data.sys_id = options.sys_id;
	if (!data.sys_id) {
		data.recordFound = false;
		return;
	}
	var validatedItem = new sn_sc.CatItem('' + data.sys_id);
  if (!validatedItem.canView() || !validatedItem.isVisibleServicePortal()) { 
		data.recordFound = false;
    return;
	}	
	if (options.native_mobile == 'true') {
			if (gs.getProperty('glide.sc.mobile.item_class_not_supported', '').split(',').indexOf(validatedItem.getRecordClass()) &gt; -1) {
				data.not_for_mobile = true;
				return;
			}
			if (gs.getProperty('glide.sc.mobile.include_desktop_only_items', 'true') == 'false') {
				if (validatedItem.getAvailability() == 'on_desktop') {
					data.not_for_mobile = true;
					return;
				}
			}
		}
	data.showPrices = $sp.showCatalogPrices();
  data.sc_cat_item = $sp.getGuide(data.sys_id, true, false);
	data.favoriteWidget = $sp.getWidget('sp_favorite', {'table': data.sc_cat_item.sys_class_name, 'sys_id': data.sys_id});
	data.readonly_user = gs.hasRole('snc_read_only');
	data.sc_cat_item.native_mobile = options.native_mobile == 'true';
	data.sys_properties = {
		twostep: gs.getProperty("glide.sc.sp.twostep", "true") == 'true',
		mobileNativeColor: gs.getProperty("glide.sc.mobile.primary_color", "#1f8476"),
		cartEnabled: gs.getProperty("glide.sc.cart.enabled", "false") == "true"
	};
	if (data.sc_cat_item.category) {
		var categoryJS;
		var categoryID = validatedItem.getFirstAccessibleCategoryForSearch((catalogID &amp;&amp; catalogID != "-1" ? catalogID : $sp.getCatalogs().value + ""));
		if (GlideStringUtil.isEligibleSysID($sp.getParameter("sysparm_category"))) {
			categoryJS = new sn_sc.CatCategory($sp.getParameter("sysparm_category") + "");
			categoryID = $sp.getParameter("sysparm_category") + "";
        } else if (categoryID)
			categoryJS = new sn_sc.CatCategory(categoryID);
		if (categoryJS &amp;&amp; GlideStringUtil.isEligibleSysID(categoryJS.getID())) {
			data.category = {
				name: categoryJS.getTitle(),
				url: '?id=' + data.sc_category_page + '&amp;sys_id=' + categoryID
			}
			if (categoryJS.getCatalog()) {
				catalogID = categoryJS.getCatalog();
				data.catalog_id = catalogID;
				var catalogObj = new sn_sc.Catalog(catalogID);
				data.sc_catalog = catalogObj.getTitle();
			}
			data.categories = [];
			data.categories.push({
				label: categoryJS.getTitle(),
				url: '?id=' + data.sc_category_page + '&amp;sys_id=' + categoryID
			});
			while(categoryJS &amp;&amp; categoryJS.getParent()) {
				var parentId =  categoryJS.getParent();
				categoryJS = new sn_sc.CatCategory(parentId);
				var category = {
					label: categoryJS.getTitle(),
					url: '?id=' + data.sc_category_page + '&amp;sys_id=' + parentId
				};
				data.categories.unshift(category);
			}
			if ((($sp.getCatalogs().value + "").split(",")).length &gt; 1) {
				data.all_catalog_msg = gs.getMessage("All Catalogs");
			}
		}
	}
    m.openedOrderGuideMsg = gs.getMessage("Order guide {0} opened", data.sc_cat_item.name);
	$sp.logStat('Cat Item View', data.sc_cat_item.sys_class_name, data.sc_cat_item.sys_id, data.sc_cat_item.name, $sp.getPortalRecord().getUniqueValue());
})();

function copyField(srcField, dstField) {
	dstField.value = srcField.value;
	dstField.displayValue = srcField.displayValue;
	dstField.display_value_list = srcField.display_value_list;
}

function transferDataIntoGloablObject(item, itemGlobalData) {
    if (item.client_script) {
        pullObjectsIntoGlobal(item.client_script.onLoad, itemGlobalData.client_scripts);
        pullObjectsIntoGlobal(item.client_script.onChange, itemGlobalData.client_scripts);
        pullObjectsIntoGlobal(item.client_script.onSubmit, itemGlobalData.client_scripts);
        item.client_script.onLoad = getIdArrFromObjectArray(item.client_script.onLoad);
        item.client_script.onChange = getIdArrFromObjectArray(item.client_script.onChange);
        item.client_script.onSubmit = getIdArrFromObjectArray(item.client_script.onSubmit);
    }
    pullObjectsIntoGlobal(item.policy, itemGlobalData.ui_policies);
    item.policy = getIdArrFromObjectArray(item.policy);
    if (!itemGlobalData.ui_scripts)
        itemGlobalData.ui_scripts = item.ui_scripts;

    item.ui_scripts = [];
}

function pullObjectsIntoGlobal(objectArr, globalObject) {
    for (var i in objectArr) {
        var id = objectArr[i].sys_id;
        if (!globalObject.hasOwnProperty(id))
            globalObject[id] = objectArr[i];
    }
}

function getIdArrFromObjectArray(objectArr) {
    var idArr = [];
    for (var i in objectArr)
        idArr.push(objectArr[i].sys_id)
    return idArr;
}

function getDefaultRequestedForUser(guideData, options) {
    var requestedForID = "";
    if (options.requested_for_id)
        requestedForID = options.requested_for_id;
    else if (guideData.sysparm_parent_table &amp;&amp; guideData.sysparm_parent_sys_id)
		requestedForID = new global.GlobalServiceCatalogUtil().getRequestForSysID(guideData.sysparm_parent_table, guideData.sysparm_parent_sys_id);
	
    return requestedForID;
}

function handleRequestedForReadOnlyOnField(guideRequestedFor, field) {
    if (guideRequestedFor)
        field.sys_readonly = true;
}

function handleDelegationCheckOnField(item, field) {
    if (item.isDelegationAllowed(field.value))
        return;

    var delegationErrorMessage = {
        message : gs.getMessage("Item is unavailable for this user"),
        type : "error"
	};

    field.isServerInvalid = true;
    if (!field.messages)
        field.messages = [];
    
    field.messages.push(delegationErrorMessage)
}

function validateAccessForIncludedItem(includedItem, guideRequestedFor) {
	var isVisibleOnServicePortal = includedItem.isVisibleServicePortal();
	var isAccessibleForRequester = includedItem.canView();
	var isDelegationAllowed = true;
    if (guideRequestedFor)
        isDelegationAllowed = includedItem.isDelegationAllowed(guideRequestedFor);
	
	return isVisibleOnServicePortal &amp;&amp; isAccessibleForRequester &amp;&amp; isDelegationAllowed;
}

function getQuantityChoiceList() {
	var clGenerator = new GlideChoiceList();
	var choiceListQuantity = clGenerator.getChoiceList("sc_cart_item", "quantity");
	var choicelistQuantityData = [];
	for (var i = 0; i &lt; choiceListQuantity.size(); i++) {
		var choice = choiceListQuantity.get(i);
		if (!isNaN(choice.getValue()))
			choicelistQuantityData.push({
				value: parseInt(choice.getValue()),
				label: choice.getLabel()
			});
	}
	return choicelistQuantityData;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-08-26 21:56:02&lt;/sys_created_on&gt;&lt;sys_id&gt;480ca054db03320064301150f0b8f545&lt;/sys_id&gt;&lt;sys_mod_count&gt;1048&lt;/sys_mod_count&gt;&lt;sys_name&gt;SC Order Guide&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Service Catalog (do not activate...see plugin description)" source="com.glide.service-portal.service-catalog"&gt;605a083121d20110a866589604c20d55&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_480ca054db03320064301150f0b8f545&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-10-26 08:25:11&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="" ng-if="::(data.recordFound &amp;&amp; !data.not_for_mobile)" sn-atf-blacklist="IS_SERVICE_CATALOG"&gt;
  &lt;sp-widget widget="orderGuideModal" ng-if="orderGuideModal"&gt;&lt;/sp-widget&gt;
	&lt;div ng-if="::data.sc_cat_item" class="row"&gt;
		&lt;div class="col-sm-12"&gt;
			&lt;div ng-class="['panel', 'panel-default', {'order-guide-mobile': {{::data.isMEE}}}]"&gt;
				&lt;div ng-class="['timeline-container', {'b-b': {{::!data.isMEE}}}]" role="tablist" aria-orientation="horizontal"&gt;
					&lt;div class="wrapper-md break-word" ng-if="::!data.isMEE"&gt;
            &lt;span class="pull-right text-2x"&gt;
	          	&lt;sp-widget widget="data.favoriteWidget"&gt;&lt;/sp-widget&gt;
         		 &lt;/span&gt;
						&lt;h2 class="h2 m-n font-thin" ng-if="::data.sc_cat_item.name"&gt;{{::data.sc_cat_item.name}}&lt;/h2&gt;
             &lt;div class="text-muted hidden-xs hidden-sm" ng-if="::data.sc_cat_item.short_description"&gt;{{::data.sc_cat_item.short_description}}&lt;/div&gt;
					&lt;/div&gt;
					&lt;div ng-class="['wrapper-xs og-timeline', {'b-t': {{::!data.isMEE}}}]"&gt;
						&lt;div class="iconlink col-sm-4 text-a-l pull-left-xs padding-left-xs flex-row items-center justify-start wrap"
                 ng-class = "{'hidden-xs hidden-sm' : guide_step != 0, 'hidden-lg hidden-md' : (options.compact_mode == 'true' || data.isMEE) &amp;&amp; guide_step != 0, 'col-sm-6' : options.compact_mode == 'true' &amp;&amp; guide_step == 0}"
                 style="padding-left:61px"
                 ng-attr-aria-level="{{data.isMEE ? 3 : undefined}}"
                 ng-attr-role="{{data.isMEE ? 'heading' : 'tab'}}"
                 ng-attr-aria-selected="{{(!data.isMEE &amp;&amp; guide_step == 0) ? true : undefined}}"
                 id="guide-step-0"
                 ng-attr-tabindex="{{(!data.isMEE &amp;&amp; guide_step == 0) ? '0' : undefined}}"
                 aria-controls="guide-step-content-panel-0"&gt;
								&lt;div ng-if="::!data.isMEE" class="circle_icon" ng-class="guide_step == 0 ? 'step_active' : 'step_inactive'"&gt;
                &lt;i class="fa fa-edit step-icon" style="left: -8px;"/&gt;
              &lt;/div&gt;
              &lt;span class="pull-right text-2x fav" ng-if="data.isMEE"&gt;
	          		&lt;sp-widget widget="data.favoriteWidget"&gt;&lt;/sp-widget&gt;
         		 	&lt;/span&gt;
							&lt;span class="text-muted m-l-sm step-text"&gt;{{m.step1}}&lt;/span&gt;	
						&lt;/div&gt;
						&lt;div class="iconlink col-sm-4 pull-left-xs left-align-xs flex-row items-center justify-center wrap"
                 ng-class = "{'hidden-xs hidden-sm' : guide_step != 1 , 'hidden-lg hidden-md' : (options.compact_mode == 'true' || data.isMEE) &amp;&amp; (guide_step != 1 || isItemOpened), 'col-sm-6' : options.compact_mode == 'true' &amp;&amp; guide_step == 1, 'text-a-c': {{ ::!data.isMEE}} }"
                 ng-attr-aria-level="{{data.isMEE ? 3 : undefined}}"
                 ng-attr-role="{{data.isMEE ? 'heading' : 'tab'}}"
                 ng-attr-aria-selected="{{(!data.isMEE &amp;&amp; guide_step == 1) ? true : undefined}}"
                 id="guide-step-1"
                 ng-attr-tabindex="{{(!data.isMEE &amp;&amp; guide_step == 1) ? '0' : undefined}}"
                 aria-controls="guide-step-content-panel-1"&gt;
              &lt;div ng-if="::!data.isMEE" class="circle_icon" ng-class="guide_step == 1 ? 'step_active' : 'step_inactive'"&gt;
                &lt;i class="fa fa-list step-icon"/&gt;
              &lt;/div&gt;
							&lt;span class="text-muted m-l-sm step-text"&gt;{{m.step2}}&lt;/span&gt;
						&lt;/div&gt;
						&lt;div class="iconlink col-sm-4 text-a-r left-align-xs flex-row items-center justify-end wrap"
                 ng-class = "{'pull-left-xs': {{::!data.isMEE}}, 'hidden-xs hidden-sm' : guide_step != 2 , 'hidden-lg hidden-md' : (options.compact_mode == 'true' || data.isMEE) &amp;&amp; guide_step != 2, 'col-sm-6' : options.compact_mode == 'true' &amp;&amp; guide_step == 2}"
                 style="padding-right:61px"
                 ng-attr-aria-level="{{data.isMEE ? 3 : undefined}}"
                 ng-attr-role="{{data.isMEE ? 'heading' : 'tab'}}"
                 ng-attr-aria-selected="{{(!data.isMEE &amp;&amp; guide_step == 2) ? true : undefined}}"
                 id="guide-step-2"
                 ng-attr-tabindex="{{(!data.isMEE &amp;&amp; guide_step == 2) ? '0' : undefined}}"
                 aria-controls="guide-step-content-panel-2"&gt;
              &lt;div ng-if="::!data.isMEE" class="circle_icon" ng-class="guide_step == 2 ? 'step_active' : 'step_inactive'"&gt;
                &lt;i class="fa fa-check step-icon" style="top: -10px;left: -9px;"/&gt;
              &lt;/div&gt;
              &lt;span ng-if="::!data.isMEE" class="text-muted m-l-sm step-text"&gt;{{m.step3}}&lt;/span&gt;
              &lt;div ng-if="::data.isMEE" class="mobile-summary"&gt;
                &lt;span class="text-muted m-l-sm step-text"&gt;{{m.step3}}&lt;/span&gt;
              &lt;/div&gt;
						&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
				&lt;div ng-class="{'padder-md padder-t-md': {{::!data.isMEE}}}" ng-if="guide_step == 0" id="guide-step-content-panel-0" aria-labelledby="guide-step-0"  role="tabpanel"&gt;
          &lt;div class="row"&gt;
            &lt;div ng-if="::data.sc_cat_item.picture" class="col-xs-12 col-sm-12 col-md-3 col-lg-3"&gt;
              &lt;img class="img-responsive catalog-item-image guide-image" alt="{{data.isMEE ? data.sc_cat_item.name : ''}}" role="{{data.isMEE ? 'img' : 'presentation'}}" ng-src="{{::data.sc_cat_item.picture}}?t=medium" /&gt;
            &lt;/div&gt;
            &lt;div ng-if="data.sc_cat_item.trusted_description" class="col-xs-12 col-sm-12 col-md-9 col-lg-9 break-word"&gt;
              &lt;div class="col-md-9 col-lg-9 visible-md visible-lg" ng-class="{false : 'visible-xs visible-sm', true : 'hidden-xs hidden-sm'}[options.show_less_orderguide === 'true']"&gt;	
              	&lt;div class="m-t guide-description" ng-bind-html="::data.sc_cat_item.trusted_description"&gt;&lt;/div&gt;
              &lt;/div&gt;
              &lt;div class="visible-xs visible-sm col-xs-12 col-sm-12" ng-if="::(options.show_less_orderguide === 'true')"&gt;
            		&lt;sc-toggle-data sn-data="::data.sc_cat_item.trusted_description"&gt;&lt;/sc-toggle-data&gt;
            	&lt;/div&gt;
            &lt;/div&gt;
	        &lt;/div&gt;
					&lt;div class="wrapper-md" ng-class="data.sc_cat_item.picture || data.sc_cat_item.trusted_description ? 'b-t' : ''"&gt;
            &lt;div class="variables-mandatory-label" ng-if="data.sc_cat_item._mandatory &amp;&amp; data.sc_cat_item._mandatory.length &gt; 0" ng-attr-role="{{ data.isMEE ? 'text': undefined}}"&gt; 
              &lt;span class="fa fa-asterisk mandatory" title="asterisk" style="padding-right: .25rem"&gt;&lt;span class="sr-only"&gt;${asterisk}&lt;/span&gt;&lt;/span&gt; ${Indicates required}
            &lt;/div&gt;
						&lt;sp-model form-model="data.sc_cat_item" mandatory="data.sc_cat_item._mandatory"&gt;&lt;/sp-model&gt;
					&lt;/div&gt;
				&lt;/div&gt;
				&lt;div ng-if="guide_step == 1" id="guide-step-content-panel-1" aria-labelledby="guide-step-1" role="tabpanel"&gt;
          &lt;div ng-if="evaluatingIncludes" class="include-loader"&gt;
            &lt;i class="fa fa-spinner fa-pulse fa-3x fa-fw"&gt;&lt;/i&gt;
						&lt;span class="sr-only"&gt;${Loading...}&lt;/span&gt;
          &lt;/div&gt;
					&lt;div class="remove-margin-bottom-xs" ng-if="includedItems.length"&gt;
						&lt;div ng-class="::data.isMEE ? 'list-group-mobile' : 'list-group'"&gt;
            &lt;div ng-if="::!data.isMEE" class="pull-right text-xs"&gt;&lt;i class="fa fa-asterisk mandatory"&gt;&lt;/i&gt; &lt;span class="text-muted"&gt;${Mandatory Fields}&lt;/span&gt;&lt;/div&gt;
						&lt;div ng-class="['m-b-lg', '{{::!data.isMEE ? 'font-bold' : 'm-l-sm'}}']" id="included-items-title"&gt;${Included Items: }&lt;/div&gt;
             &lt;uib-accordion id="id-accordion" close-others="true"&gt;
							&lt;uib-accordion-group
                                   ng-class="['accordion-header', {'b': !data.isMEE , 'disable-row': !item.included }]"
                                   template-url="group-template.html"
                                   ng-init="initAttachmentCallbacks($index);"
                                   ng-repeat="item in includedItems track by item.sys_id | orderBy: 'order'"
                                   id="{{::item.sys_id}}"
                                   is-disabled="!item.included"
                                   is-open="item.isOpen"
                                   sc-accordion-scroll&gt;
                &lt;uib-accordion-heading&gt;
                  &lt;div class="row m-n"&gt;
                    &lt;div class="col-xs-12 no-padder"&gt;
                      &lt;div class="panel-heading"&gt;
                        &lt;div class="panel-title flex-row items-center no-padder" ng-class="{'b-b': {{::data.isMEE}} }"&gt;
                          &lt;div class="og-mobile-include-check-wrapper" ng-if="::data.isMEE &amp;&amp; showIncludeToggle"&gt;	
                            &lt;label class="og-check-bucket" ng-click="$event.stopPropagation()" role="presentation"&gt;
                              &lt;input type="checkbox"
                                     ng-model="item.included"
                                     ng-change="toggleItemState(item)"
                                     tabindex="0"
                                     aria-label="{{item.name + ' ' + (item.included ? '${Included}' : '${Not Included}')}}"
                                     id="enable_switch_{{::item.sys_id}}"  /&gt;
                              &lt;span class="og-check" for="enable_switch_{{::item.sys_id}}" /&gt;
                            &lt;/label&gt;
                          &lt;/div&gt;
                          &lt;div ng-class="(!data.isMEE &amp;&amp; showIncludeToggle)? 'col-xs-8 col-sm-10 col-md-11 flex-row': 'col-xs-12 flex-row'"
                               ng-click="$parent.toggleOpen(); showCancel(item.sys_id);" ng-attr-tabindex="{{item.included ? '0': '-1'}}" class="accordion-toggle b-r"
                              id="{{'accordion-header-' + item.sys_id}}"
                              aria-expanded="{{$parent.isOpen}}"
                              role="button"
                              ng-disabled="!item.included"
                              aria-controls="{{'accordion-panel-' + item.sys_id}}"&gt;
                  					&lt;div class="row guide-row flex flex-row items-center wrap" ng-class="{'flex-row': {{ ::data.isMEE }} }"&gt; 
                    &lt;div ng-class="::data.isMEE ? 'flex og-mobile-item' : 'col-md-3 col-lg-3 col-xs-12 col-sm-12 font-bold'" id="item_name_{{::item.sys_id}}"&gt;
                      &lt;div ng-class="::data.isMEE ? 'flex-row wrap items-center': ''"&gt;
                        &lt;img ng-if="::item.icon &amp;&amp; !data.isMEE" ng-src="{{::item.icon}}" class="item-icon pad-right hidden-xs hidden-sm"/&gt;
                        &lt;span role="heading" aria-level="3" ng-class="::data.isMEE ? 'item-name flex m-r-xs' : 'break-word'"&gt;
                          {{::item.name}}
                          &lt;span class="sr-only"&gt;.&lt;/span&gt;
                        &lt;/span&gt;
                        &lt;label class="visible-sm-inline-block visible-xs-inline-block options m-r-xs" ng-class="{'visible-md-inline-block visible-lg-inline-block': {{ ::data.isMEE }}}"&gt;
                          &lt;span class="sr-only" ng-if="::data.isMEE &amp;&amp; (item._sections.length &gt; 0 || item.mandatory_attachment)"&gt;${Has} &lt;/span&gt;
                          &lt;span  class="sr-only" ng-if="(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included"&gt;${Mandatory}&lt;/span&gt;
                          &lt;i class="fa fa-asterisk mandatory" ng-if="data.isMEE &amp;&amp; (item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included" aria-hidden="true"&gt;&lt;/i&gt;
                          &lt;span ng-if="::data.isMEE &amp;&amp; (item._sections.length &gt; 0 || item.mandatory_attachment)"&gt;${Options}&lt;/span&gt;
                        &lt;/label&gt;
                      &lt;/div&gt;
                      &lt;div class="visible-sm-inline-block visible-xs-inline-block options" ng-class="{'visible-md-inline-block visible-lg-inline-block': {{ ::data.isMEE }}}" ng-if="::data.isMEE"&gt;
                        &lt;span class="fa accordion-icon" ng-class="{'hidden-md hidden-lg': {{ ::!data.isMEE }} }" ng-if="item.included" title="{{item.isOpen ?'${Collapse}':'${Expand}'}}" aria-hidden="true"&gt;&lt;/span&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div ng-if="::!data.isMEE" class="col-md-6 col-lg-6 hidden-xs hidden-sm break-word" aria-hidden="true"&gt;
                      {{::item.short_description}}
                      &lt;span class="sr-only"&gt;.&lt;/span&gt;
                    &lt;/div&gt;
                    &lt;div ng-if="::!data.isMEE" class="col-md-3 col-lg-3 col-xs-12 col-sm-12 text-a-r pull-left-xs left-align-xs" &gt; 
                      &lt;span class="hidden-sm hidden-xs pull-left options" ng-if="::item._sections.length &gt; 0 || item.mandatory_attachment"&gt; 
                        &lt;span class="sr-only"&gt;${Has} &lt;/span&gt;
                        &lt;i class="fa fa-asterisk mandatory" ng-if="(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included" aria-hidden="true"&gt;&lt;/i&gt;
                        &lt;span  class="sr-only" ng-if="(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included"&gt;${Mandatory}&lt;/span&gt;
                        &lt;i class="m-l-sm" ng-if="!(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) || !item.included"&gt;&lt;/i&gt;
                        ${Options}
                        &lt;span class="sr-only"&gt;.&lt;/span&gt;
                      &lt;/span&gt;
                      &lt;span class="visible-sm-inline-block visible-xs-inline-block options" ng-if="::!data.isMEE &amp;&amp; (item._sections.length &gt; 0 || item.mandatory_attachment)"&gt; 
                        &lt;span class="sr-only"&gt;${Has} &lt;/span&gt;
                        &lt;i class="fa fa-asterisk mandatory" ng-if="(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included" aria-hidden="true"&gt;&lt;/i&gt;
                        &lt;span  class="sr-only" ng-if="(item._mandatory.length ||  (item.mandatory_attachment &amp;&amp; !item.attachment_submitted)) &amp;&amp; item.included"&gt;${Mandatory}&lt;/span&gt;
                        ${Options}
                        &lt;span class="sr-only"&gt;.&lt;/span&gt;
                      &lt;/span&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                  &lt;div class="flex-column justify-center m-r" ng-if="::!data.isMEE"&gt;
                    &lt;span class=" fa accordion-icon" ng-class="(!item.isOpen || (!item.included)) ? 'fa-chevron-down' : 'fa-chevron-up'" title="{{item.isOpen ?'${Collapse} '+item.name:'${Expand} '+item.name}}"&gt;&lt;/span&gt;
                  &lt;/div&gt;
                          &lt;/div&gt;
                          &lt;div class="col-xs-4 col-sm-2 col-md-1 flex-row justify-center" ng-if="::!data.isMEE &amp;&amp; showIncludeToggle" ng-class="{'og-switch': {{ ::!data.isMEE }} }"&gt;	
                            &lt;div class="input-switch inline v-middle" ng-click="$event.stopPropagation()" data-original-title="{{item.name + ' ' + (item.included ? '${Included}' : '${Not Included}')}}" data-toggle="tooltip" data-placement="top" role="none"&gt;
                              &lt;input type="checkbox"
                                     ng-model="item.included"
                                     ng-change="toggleItemState(item)"
                                     tabindex="0"
                                     aria-label="{{item.name + ' ' + (item.included ? '${Included}' : '${Not Included}')}}"
                                     id="enable_switch_{{::item.sys_id}}" /&gt;
                              &lt;label class="switch" for="enable_switch_{{::item.sys_id}}" role="presentation"&gt;&lt;/label&gt;
                            &lt;/div&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/uib-accordion-heading&gt;
								&lt;div id="item_details_{{::item.sys_id}}" role="region" aria-label="{{::item.name}}" sp-pause-child-watchers-if-hidden&gt;
                  &lt;div id="item_details_{{::item.sys_id}}_wrapper" class="wrapper" ng-class="::data.isMEE ? 'guide-item-details-wrapper-mobile' : 'guide-item-details-wrapper'" ng-attr-aria-modal="{{ data.isMEE ? true: undefined}}" ng-attr-role="{{ data.isMEE ? 'dialog': undefined}}" ng-attr-tabindex="{{ data.isMEE ? '-1': undefined}}"&gt;
                    &lt;div class="panel-body"&gt;
                      &lt;div class="row m-b-lg"&gt;
                        &lt;div class="hidden-md hidden-lg break-word" ng-class="{'title-mobile' : {{ ::data.isMEE}} }" aria-hidden="true"&gt;
                            {{::item.short_description}}
                          &lt;div ng-if="::!data.isMEE" class="font-normal pull-right m-r-sm col-xs-3 col-sm-3"&gt;
                            &lt;div class="m-b" ng-if="!item.no_quantity &amp;&amp;  item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.show_quantity"&gt;
                              &lt;label for="catItemQuantity"&gt;&lt;b&gt;${Quantity}&lt;/b&gt;&lt;/label&gt;
                              &lt;select id="catItemQuantity" ng-change="updateQuantity(item)" class="scBasicSelect" ng-model="item.quantity"&gt;
                                &lt;option ng-repeat="num in choiceListQuantity" value={{::num.value}}&gt;{{::num.label}}&lt;/option&gt;
                              &lt;/select&gt;
                            &lt;/div&gt;
                            &lt;div class="m-b" ng-if="data.showPrices &amp;&amp; item.price" &gt;
                              &lt;b&gt;${Price}&lt;/b&gt;
                              &lt;div&gt;
                                {{item.price_display}}&lt;em ng-if="item.recurring_price" class="cat_item_price"&gt; {{item.price ? '+' : ''}} {{item.recurring_price_display + ' ' + item.recurring_price_frequency}}&lt;/em&gt;
                              &lt;/div&gt;
                            &lt;/div&gt;
                            &lt;div class="m-b" ng-if="!data.hideDeliveryTime &amp;&amp; item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.sys_class_name != 'sc_cat_item_guide' &amp;&amp; (!item.no_delivery_time &amp;&amp; item.estimated_delivery_time)"&gt;
                              &lt;b&gt;${Delivery Time}&lt;/b&gt;
                              &lt;div&gt;
                                {{::item.estimated_delivery_time}}
                              &lt;/div&gt;
                            &lt;/div&gt;                      
                          &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="hidden-xs hidden-sm" ng-if="::item.picture"&gt;
                          &lt;img ng-if="::item.picture" class="col-lg-3 col-md-3 img-responsive catalog-item-image guide-item-image" ng-src="{{::item.picture}}" /&gt;  
                        &lt;/div&gt;
                        &lt;div&gt;
                          &lt;div ng-if="::!data.isMEE" class="font-normal pull-right col-lg-3 col-md-3 hidden-xs hidden-sm"&gt;
                            &lt;div class="m-b" ng-if="!item.no_quantity &amp;&amp;  item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.show_quantity"&gt;
                              &lt;label for="catItemQuantity"&gt;&lt;b&gt;${Quantity}&lt;/b&gt;&lt;/label&gt;
                              &lt;select id="catItemQuantity" ng-change="updateQuantity(item)" class="scBasicSelect" ng-model="item.quantity"&gt;
                                &lt;option ng-repeat="num in choiceListQuantity" value={{::num.value}}&gt;{{::num.label}}&lt;/option&gt;
                              &lt;/select&gt;
                            &lt;/div&gt;
                            &lt;div class="m-b" ng-if="data.showPrices &amp;&amp; item.price" &gt;
                              &lt;b&gt;${Price}&lt;/b&gt;
                              &lt;div&gt;
                                {{item.price_display}}&lt;em ng-if="item.recurring_price" class="cat_item_price"&gt; {{item.price ? '+' : ''}} {{item.recurring_price_display + ' ' + item.recurring_price_frequency}}&lt;/em&gt;
                              &lt;/div&gt;
                            &lt;/div&gt;
                            &lt;div class="m-b" ng-if="!data.hideDeliveryTime &amp;&amp; item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.sys_class_name != 'sc_cat_item_guide' &amp;&amp; (!item.no_delivery_time &amp;&amp; item.estimated_delivery_time)"&gt;
                              &lt;b&gt;${Delivery Time}&lt;/b&gt;
                              &lt;div&gt;
                                {{::item.estimated_delivery_time}}
                              &lt;/div&gt;
                            &lt;/div&gt;
                          &lt;/div&gt;
                          &lt;img ng-if="::item.picture" class="img-responsive catalog-item-image hidden-lg hidden-md" ng-class="{'guide-item-image-xs': {{::!data.isMEE }} }" ng-src="{{::item.picture}}" alt="{{::data.isMEE ? item.name : ''}}" role="{{::data.isMEE ? 'img' : 'presentation'}}" /&gt;
                          &lt;div ng-if="::item.trusted_description" class="guide-description clearfix visible-md visible-lg break-word" ng-bind-html="::item.trusted_description" ng-class="::{false : 'visible-xs visible-sm', true : 'hidden-xs hidden-sm'}[options.show_less_orderguide === 'true']"&gt;&lt;/div&gt;
                          &lt;div class="visible-xs visible-sm break-word" ng-if="::(options.show_less_orderguide === 'true')"&gt;
                            &lt;sc-toggle-data sn-data="::item.trusted_description"&gt;&lt;/sc-toggle-data&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                      &lt;fieldset ng-class="{'disabled-mask': !item.included}"&gt;&lt;/fieldset&gt;
                      &lt;sp-cat-item item="item" /&gt;
                      &lt;div class="variables-mandatory-label" ng-if="item._mandatory &amp;&amp; item._mandatory.length &gt; 0" ng-attr-role="{{ data.isMEE ? 'text': undefined}}"&gt; 
                        &lt;span class="fa fa-asterisk mandatory" title="asterisk" style="padding-right: .25rem"&gt;&lt;span class="sr-only"&gt;${asterisk}&lt;/span&gt;&lt;/span&gt; ${Indicates required}
                      &lt;/div&gt;
                      &lt;sp-model form-model="item" mandatory="item._mandatory"&gt;&lt;/sp-model&gt;
                      &lt;div&gt;	
                        &lt;div ng-if="item.attachments.length" class="file-list-wrap"&gt;
                          &lt;ul class="list-group" style="margin-bottom: 0; padding:0"&gt;
                            &lt;li class="list-group-item" ng-repeat="attachment in item.attachments"&gt;
                              &lt;div class="sp-attachment-block-single-line file-attachment row" id="{{::attachment.sys_id}}"&gt;
                                &lt;a aria-label="{{::(attachment.thumbSrc ? m.viewAttachedImage : m.downloadAttachment)}}" tabindex="0" class="col-md-1 col-sm-1 col-xs-2 view-attachment m-b-none text-center" style="border: none;"
                                   ng-click="item.attachmentHandler.viewAttachment($event, attachment)" href="javascript:void(0)" title="View" &gt;
                                  &lt;img alt="" ng-if="attachment.thumbSrc" class="attachment-thumbnail img-responsive" ng-src="{{attachment.thumbSrc}}"/&gt;
                                  &lt;span ng-if="::!attachment.thumbSrc"&gt;
                                    &lt;span class="glyphicon glyphicon-file text-2x"/&gt;
                                  &lt;/span&gt;
                                &lt;/a&gt;
                                &lt;div class="col-md-9 col-sm-8 col-xs-7 file-name v-middle"&gt;
                                  &lt;a tabindex="0" class="get-attachment" ng-click="item.attachmentHandler.downloadAttachment(attachment)" ng-attr-title="${Download} {{::attachment.file_name}}" href="javascript:void(0)"&gt;
                                    {{::attachment.file_name}} ({{::attachment.size}})
                                  &lt;/a&gt;
                                  &lt;input tabindex="-1" ng-keydown="item.attachmentHandler.onKeyDown($event, attachment)" ng-blur="item.attachmentHandler.updateAttachment($event, attachment)" style="display: none;"/&gt;
                                  &lt;div&gt;
                                    &lt;time&gt;&lt;sn-time-ago timestamp="::attachment.sys_updated_on" /&gt;&lt;/time&gt;
                                  &lt;/div&gt;
                                &lt;/div&gt;
                                &lt;div class="col-md-2 col-sm-3 col-xs-3 tools v-middle align-right"&gt;
                                  &lt;div class="btn-group" ng-if="::(attachment.canWrite || attachment.canDelete)"&gt;
                                    &lt;button type="button" tabindex="0" class="btn btn-default btn-clear" ng-click="item.attachmentHandler.editAttachment($event, attachment)" data-toggle="tooltip" data-original-title="${Edit} {{::attachment.file_name}}" data-placement="bottom" aria-label="${Edit} {{::attachment.file_name}}"&gt;&lt;i class="fa fa-pencil" aria-hidden="true"&gt;&lt;/i&gt;&lt;/button&gt;
                                    &lt;button type="button" tabindex="0" class="btn btn-default btn-clear" ng-click="item.confirmDeleteAttachment(attachment, $event)" data-toggle="tooltip" data-original-title="${Delete} {{::attachment.file_name}}" data-placement="bottom" aria-label="${Delete} {{::attachment.file_name}}"&gt;&lt;i class="fa fa-times" aria-hidden="true"&gt;&lt;/i&gt;&lt;/button&gt;
                                  &lt;/div&gt;
                                &lt;/div&gt;
                              &lt;/div&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;div class="errors-wrap" ng-hide="errorMessages.length == 0"&gt;
                            &lt;div class="error-msg icon-cross" ng-repeat="error in errorMessages" ng-click="item.attachmentHandler.dismissMsg($event, $index, errorMessages)"&gt;
                              &lt;span&gt;{{error.msg}}&lt;/span&gt;
                              &lt;span class="file-name"&gt;{{error.fileName}}&lt;/span&gt;
                            &lt;/div&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div ng-class="{'mobile-attachment-label' : {{::data.isMEE}} }"&gt;
                          &lt;label ng-if="!submitted &amp;&amp; !item.no_attachments" ng-class="{'attachment-label' : {{::!data.isMEE}} }" ng-attr-role="{{data.isMEE ? 'text' : undefined}}"&gt;
                            &lt;span class="file-upload-input"&gt;
                              &lt;input type="file" style="display: none" multiple="true" ng-file-select="uploadAttachments(item, $files)" class="sp-attachments-input"/&gt;
                              &lt;button ng-click="item.attachmentHandler.openSelector($event)" class="panel-button sp-attachment-add btn btn-link" data-toggle="tooltip" title="${Add attachment}" aria-label="${Add attachment}"  aria-describedby="mandatory_instructions_{{item.sys_id}}" data-container="body"&gt;
                              	&lt;span class="glyphicon glyphicon-paperclip"&gt;&lt;/span&gt;
                              &lt;/button&gt;
                            &lt;/span&gt;
                            &lt;span id="mandatory_instructions_{{item.sys_id}}"  class="sr-only"&gt;
                              &lt;span ng-if="item.mandatory_attachment &amp;&amp; item.included"&gt;${Atleast one attachment is required for}  {{item.name}}&lt;/span&gt;
                            &lt;/span&gt;
                            &lt;span class="fa fa-asterisk mandatory" 
                                  ng-if="item.mandatory_attachment &amp;&amp; item.included" 
                                  ng-class="{'mandatory-filled': item.mandatory_attachment &amp;&amp; item.attachment_submitted}"
                                  style="vertical-align:super" aria-hidden="true"&gt;&lt;/span&gt;
                            &lt;span class="add-attachment-content" aria-hidden="true"&gt;${Add attachments}&lt;/span&gt;
                          &lt;/label&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                      &lt;div ng-if="::data.isMEE" class="font-normal og-item-price"&gt;
                        &lt;div class="m-b cat-item-quantity-group" ng-if="!item.no_quantity &amp;&amp;  item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.show_quantity"&gt;
                          &lt;label for="catItemQuantity'"&gt;&lt;b&gt;${Quantity: }&lt;/b&gt;&lt;/label&gt;
                          &lt;div class="cat-item-quantity-box"&gt;
                          &lt;select id="catItemQuantity" ng-change="updateQuantity(item)" class="sn-select-basic" ng-model="item.quantity"&gt;
                            &lt;option ng-repeat="num in choiceListQuantity" value={{::num.value}}&gt;{{::num.label}}&lt;/option&gt;
                          &lt;/select&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class="m-b" ng-if="data.showPrices &amp;&amp; item.price" role="text"&gt;
                          &lt;b&gt;${Price}:&lt;/b&gt; {{item.price_display}}&lt;em ng-if="item.recurring_price" class="cat_item_price"&gt; {{item.price ? '+' : ''}} {{item.recurring_price_display + ' ' + item.recurring_price_frequency}}&lt;/em&gt;
                        &lt;/div&gt;
                        &lt;div class="m-b" ng-if="!data.hideDeliveryTime &amp;&amp; item.sys_class_name != 'sc_cat_item_producer' &amp;&amp; item.sys_class_name != 'sc_cat_item_guide' &amp;&amp; (!item.no_delivery_time &amp;&amp; item.estimated_delivery_time)" role="text"&gt;
                          &lt;b&gt;${Delivery Time}:&lt;/b&gt; {{::item.estimated_delivery_time}}
                        &lt;/div&gt;
                      &lt;/div&gt;
		&lt;/div&gt;
		&lt;/div&gt;
		&lt;/div&gt;
              &lt;/uib-accordion-group&gt;
            &lt;/uib-accordion&gt;
						&lt;/div&gt;
					&lt;/div&gt;
					&lt;div class="empty-state-content" ng-if="includedItems.length == 0 &amp;&amp; !evaluatingIncludes"&gt;
            			&lt;h3&gt;${Order Guide has no items to order}&lt;/h3&gt;
          			&lt;/div&gt;
				&lt;/div&gt;
				&lt;div ng-if="guide_step == 2" id="guide-step-content-panel-2" aria-labelledby="guide-step-2" role="tabpanel"&gt;
					&lt;div ng-class="::data.isMEE ? 'list-group-mobile' : 'list-group'"&gt;
            &lt;section ng-if="::data.isMEE" class="summary"&gt;
							&lt;label class="m-b-lg m-l-sm"&gt;${Order Guide Details}&lt;/label&gt;
							&lt;section ng-repeat="item in ::includedItems track by item.sys_id| orderBy: 'order'" class="flex-row wrap" ng-class="::['b-b' ,{'summary-excluded': !item.included}]"&gt;
                &lt;div class="padder-v-xs guide-item flex"&gt;
                  &lt;label class="guide-item-quantity" role="text"&gt;&lt;span class="sr-only"&gt;${Quantity}&lt;/span&gt;{{::item.quantity}} &lt;/label&gt;
									&lt;div class="guide-item-name"&gt;
                    &lt;span class="wrap-word"&gt;{{::item.name}}&lt;/span&gt;
                    &lt;div class="wrap-word" role="text"&gt;
                      &lt;span ng-if=" data.showPrices &amp;&amp; item.price"&gt;&lt;span class="sr-only"&gt;${Price}&lt;/span&gt; {{::item.price_display}}&lt;/span&gt;
                      &lt;span ng-if="data.showPrices &amp;&amp; item.recurring_price"&gt; +&lt;span class="sr-only"&gt;${Recurring Price}&lt;/span&gt; {{::item.recurring_price_display}}&lt;/span&gt;
                      &lt;span ng-if="::(data.showPrices &amp;&amp; item.recurring_price &amp;&amp; item.recurring_price_frequency)" style="font-size:85%"&gt;{{::item.recurring_price_frequency}}&lt;/span&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;label ng-if="::!item.included" class="wrapper-xs not-included not-included-pill" role="text"&gt;&lt;span class="sr-only"&gt;{{::item.name}} &lt;/span&gt;${NOT INCLUDED}&lt;/label&gt;
              &lt;/section&gt;
						&lt;/section&gt;
            
						&lt;table ng-if="::!data.isMEE" class="table table-striped m-b-sm light-border-bottom summary add-margin-bottom-xs" summary="${Summary of the guide}"&gt;
							&lt;thead&gt;
								&lt;tr&gt;
									&lt;th class="wrapper-sm wrapper-cart-xs col-md-5 col-lg-5 col-xs-8 col-sm-8 border-bottom-xs" scope="col"&gt;${Order Guide Details}&lt;/th&gt;
									&lt;th class="wrapper-sm col-md-1 col-lg-1 text-a-c hidden-xs hidden-sm" scope="col"&gt;${Quantity}&lt;/th&gt;
									&lt;th class="wrapper-sm col-md-2 col-lg-2 text-a-c hidden-xs hidden-sm" scope="col"&gt;${Price} (${each})&lt;/th&gt;
									&lt;th class="wrapper-sm col-md-2 col-lg-2 text-a-c hidden-xs hidden-sm" scope="col"&gt;${Recurring} (${each})&lt;/th&gt;
                  &lt;th class="wrapper-sm wrapper-cart-xs col-md-2 col-lg-2 col-xs-4 col-sm-4 border-bottom-xs" scope="col" ng-hide="totalIncluded == includedItems.length" style="width:12%"&gt;&lt;/th&gt;
								&lt;/tr&gt;
							&lt;/thead&gt;
							&lt;tbody&gt;
								&lt;tr ng-repeat="item in ::includedItems track by item.sys_id| orderBy: 'order'"&gt;
									&lt;td class="wrapper-sm v-middle wrapper-cart-xs border-top-xs"&gt;
                    &lt;span class="hidden-md hidden-lg"&gt;{{::item.quantity}} &lt;/span&gt;
										&lt;span class="wrap-word"&gt;{{::item.name}}&lt;/span&gt;
									&lt;/td&gt;
									&lt;td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm"&gt;
										&lt;span&gt;{{::(item.quantity ? item.quantity : '---')}}&lt;/span&gt;
									&lt;/td&gt;
									&lt;td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm"&gt;
										&lt;span&gt;&lt;strong&gt;{{::(data.showPrices &amp;&amp; item.price ? item.price_display : '---')}}&lt;/strong&gt;&lt;/span&gt;
									&lt;/td&gt;
									&lt;td class="wrapper-sm v-middle text-a-c hidden-xs hidden-sm"&gt;
										&lt;span class="clearfix"&gt;&lt;strong&gt;{{::(data.showPrices &amp;&amp; item.recurring_price ? item.recurring_price_display : '---')}}&lt;/strong&gt;&lt;/span&gt;
										&lt;span ng-if="::(data.showPrices &amp;&amp; item.recurring_price &amp;&amp; item.recurring_price_frequency)" style="font-size:10px"&gt;{{::item.recurring_price_frequency}}&lt;/span&gt;
									&lt;/td&gt;
                  &lt;td class="wrapper-sm v-middle text-a-r wrapper-cart-xs border-top-xs" ng-hide="::(totalIncluded == includedItems.length)"&gt;
										&lt;span ng-if="::!item.included" class="wrapper-xs not-included not-included-pill"&gt;${NOT INCLUDED}&lt;/span&gt;
									&lt;/td&gt;
								&lt;/tr&gt;
							&lt;/tbody&gt;
						&lt;/table&gt;            
            &lt;div class="padder-v clearfix hidden-xs hidden-sm hidden-md" ng-if="::!data.isMEE" style="padding-top: 25px !important"&gt;
              &lt;div  class="pull-right"&gt;
                &lt;button ng-disabled="submitted" name="add_to_cart" ng-click="triggerAddToCart()" class="btn btn-default m-r m-l m-r-6" ng-if="showAddToCart" aria-label="${Add included items to Cart}"&gt;${Add to Cart}&lt;/button&gt;
                &lt;button ng-disabled="submitted" name="prev" ng-click="goPrev()" class="btn btn-default m-r m-r-6"&gt;${Edit Options}&lt;/button&gt;
                &lt;button ng-disabled="submitted" name="order" ng-click="triggerSubmit()" class="btn btn-primary" id="submit-btn"&gt;{{::submitButtonMsg}}&lt;/button&gt;
              &lt;/div&gt;
						&lt;div class="pull-right m-r-lg m-l wrapper-sm" ng-if="data.showPrices" style="top: -10px;position: relative;"&gt;
								&lt;div class="pull-left"&gt;&lt;strong&gt;${Total} : &lt;/strong&gt;
								&lt;/div&gt;
								&lt;div class="pull-left m-l-xs"&gt;
									&lt;div&gt;&lt;span class="sr-only"&gt;${Price}&lt;/span&gt;&lt;strong&gt; {{price_display}}&lt;/strong&gt;
									&lt;/div&gt;
                  &lt;span class="sr-only" ng-if="recurring_price_display &amp;&amp; recurring_price_display.length &gt; 0"&gt;${Recurring Price}&lt;/span&gt;
									&lt;span class="clearfix" ng-if="recurring_price_display &amp;&amp; recurring_price_display.length &gt; 0" ng-repeat="rec in recurring_price_display" style="font-size:85%;"&gt; + {{rec}}&lt;/span&gt;
								&lt;/div&gt;
							&lt;/div&gt;
						&lt;/div&gt;
            
            &lt;div class="clearfix visible-xs visible-sm visible-md"&gt;
              &lt;div class="m-r-lg m-b-sm" ng-class="'{{::data.isMEE ? 'pull-right m-t-sm' : 'pull-left'}}'" ng-if="::data.showPrices"&gt;
								&lt;div class="pull-left"&gt;&lt;strong&gt;${Total : }&lt;/strong&gt;
								&lt;/div&gt;
								&lt;div class="pull-left m-l-xs"&gt;
									&lt;div role="text"&gt;&lt;span class="sr-only"&gt;${Price}&lt;/span&gt;&lt;strong&gt; {{price_display}}&lt;/strong&gt;
                    &lt;span class="sr-only" ng-if="recurring_price_display &amp;&amp; recurring_price_display.length &gt; 0"&gt;${Recurring Price}&lt;/span&gt;
										&lt;span class="clearfix" ng-if="recurring_price_display  &amp;&amp; recurring_price_display.length &gt; 0" ng-repeat="rec in recurring_price_display" style="font-size:85%;"&gt; + {{rec}}&lt;/span&gt;
									&lt;/div&gt;
								&lt;/div&gt;
							&lt;/div&gt;
            	&lt;button ng-disabled="submitted" name="add_to_cart" ng-click="triggerAddToCart()" class="btn btn-default m-b-sm col-xs-12" ng-if="::!data.isMEE &amp;&amp; showAddToCart" aria-label="${Add included items to Cart}"&gt;
                  ${Add to Cart}&lt;/button&gt;
              &lt;button ng-if="::!data.isMEE"  ng-disabled="submitted" name="prev" ng-click="goPrev()" class="btn btn-default m-b-sm col-xs-12"&gt;
                  ${Edit Options}&lt;/button&gt;
              &lt;button ng-if="::!data.isMEE" ng-disabled="submitted" name="order" ng-click="triggerSubmit()" class="btn btn-primary col-xs-12" id="submit-btn"&gt;
                  {{::submitButtonMsg}}&lt;/button&gt;
            &lt;/div&gt;
            
					&lt;/div&gt;
				&lt;/div&gt;
				&lt;div ng-if="::!data.isMEE &amp;&amp; !data.readonly_user" class="guide-nav" ng-hide="evaluatingIncludes || guide_step == 2" ng-class="{'guide-nav-setp1': guide_step == 1}"&gt;
          &lt;div class="pull-right"&gt;
            &lt;button ng-hide="guide_step != 1 || submitted" name="submit" ng-click="goPrev()" class="btn btn-default padder pull-left-xs" ng-class="{'m-r-6': guide_step &lt; 2}"&gt;{{::m.prevMsg}}&lt;/button&gt;
            &lt;button id="submit" ng-hide="guide_step &gt; 1" ng-disabled="submitted || data.sc_cat_item._mandatory.length &gt; 0 || (totalIncluded &lt;= 0 &amp;&amp; guide_step != 0)" name="submit" ng-click="goNext()" class="btn btn-primary padder-lg" sn-focus="guide_step &lt; 2"&gt;{{::m.nextMsg}}&lt;/button&gt;
            &lt;span ng-if="validating" style="padding-left:4px"&gt;${Validating...}&lt;/span&gt;
          &lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;div ng-if="::!data.sc_cat_item"&gt;
		&lt;div class="panel panel-default"&gt;
			&lt;div class="panel-heading"&gt;
				&lt;h4 class="panel-title"&gt;${Item not found}&lt;/h4&gt;
			&lt;/div&gt;
			&lt;div class="panel-body wrapper"&gt;
				&lt;p&gt;${This item is not found or currently not available}&lt;/p&gt;
				&lt;p&gt;${Suggestions}:&lt;/p&gt;
				&lt;ul&gt;
					&lt;li&gt;${Try searching for the item}&lt;/li&gt;
					&lt;li&gt;${Go to the Service Catalog homepage}&lt;/li&gt;
				&lt;/ul&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div ng-if="::data.not_for_mobile"&gt;
  &lt;div class="wrapper-lg flex-center"&gt;
    ${We're sorry, this item isn't available on mobile}
  &lt;/div&gt;
  &lt;div class="flex-center"&gt;
  	&lt;img src="not_viewable.png" width="300"/&gt;  
  &lt;/div&gt;
&lt;/div&gt;
&lt;div ng-if="::!data.recordFound" class="alert alert-info"&gt;{{::m.invalidRecordMsg}}&lt;/div&gt;
&lt;now-message key="Items have been added successfully" value="${Items have been added successfully}"/&gt;
&lt;now-message key="Items have been added successfully to your cart" value="${Items have been added successfully to your cart}"/&gt;
&lt;now-message key="Add to Cart" value="${Add to Cart}"/&gt;
&lt;now-message key="Add included items to Cart" value="${Add included items to Cart}"/&gt;
&lt;now-message key="Catalog Home" value="${Catalog Home}"/&gt;
&lt;now-message key="View Cart" value="${View Cart}"/&gt;
&lt;now-message key="Attachment(s) are not added" value="${Attachment(s) are not added}"/&gt;
&lt;now-message key="Please wait, attachment deletion in progress" value="${Please wait, attachment deletion in progress}"/&gt;
&lt;now-message key="Leave page?" value="${Leave page?}"/&gt;
&lt;now-message key="Changes you made will be lost." value="${Changes you made will be lost.}"/&gt;
&lt;now-message key="Cancel" value="${Cancel}"/&gt;
&lt;now-message key="Leave" value="${Leave}"/&gt;
&lt;now-message key="Done" value="${Done}"/&gt;
&lt;now-message key="Edit" value="${Edit}"/&gt;
&lt;script type="text/ng-template" id="group-template.html"&gt;
   &lt;div&gt;
   	&lt;div uib-accordion-transclude="heading" class="container-fluid no-padder accordion-header-heading"&gt;
   		&lt;span uib-accordion-header&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class="panel-collapse collapse" uib-collapse="!isOpen || (!$parent.item.included &amp;&amp; !$parent.data.isMEE)" id="{{'accordion-panel-' + $parent.item.sys_id}}"&gt;
      &lt;div ng-transclude&gt;&lt;/div&gt;
  	&lt;/div&gt;
  &lt;/div&gt;
  &lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-20 23:17:32</sys_created_on>
        <sys_id>55d1cbbd2f7011108968ea5ef699b650</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>c9d1473d2f7011108968ea5ef699b6f3</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sp_rel_widget_clone_55d1cbbd2f7011108968ea5ef699b650</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-20 23:17:32</sys_updated_on>
    </sp_rel_widget_clone>
</record_update>
